import { StylesheetMap } from '../stylesheet-map/stylesheet-map';
import { LayoutConfigOptions } from '../tokens/library-config';
import * as ɵngcc0 from '@angular/core';
export declare class StyleUtils {
    private _serverStylesheet;
    private _serverModuleLoaded;
    private _platformId;
    private layoutConfig;
    constructor(_serverStylesheet: StylesheetMap, _serverModuleLoaded: boolean, _platformId: Object, layoutConfig: LayoutConfigOptions);
    /**
     * Applies styles given via string pair or object map to the directive element
     */
    applyStyleToElement(element: HTMLElement, style: StyleDefinition | string, value?: string | number | null): void;
    /**
     * Applies styles given via string pair or object map to the directive's element
     */
    applyStyleToElements(style: StyleDefinition, elements?: HTMLElement[]): void;
    /**
     * Determine the DOM element's Flexbox flow (flex-direction)
     *
     * Check inline style first then check computed (stylesheet) style
     */
    getFlowDirection(target: HTMLElement): [string, string];
    /**
     * Find the DOM element's raw attribute value (if any)
     */
    lookupAttributeValue(element: HTMLElement, attribute: string): string;
    /**
     * Find the DOM element's inline style value (if any)
     */
    lookupInlineStyle(element: HTMLElement, styleName: string): string;
    /**
     * Determine the inline or inherited CSS style
     * NOTE: platform-server has no implementation for getComputedStyle
     */
    lookupStyle(element: HTMLElement, styleName: string, inlineOnly?: boolean): string;
    /**
     * Applies the styles to the element. The styles object map may contain an array of values
     * Each value will be added as element style
     * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones
     */
    private _applyMultiValueStyleToElement;
    private _setServerStyle;
    private _getServerStyle;
    private _readStyleAttribute;
    private _writeStyleAttribute;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<StyleUtils, never>;
}
/**
 * Definition of a css style. Either a property name (e.g. "flex-basis") or an object
 * map of property name and value (e.g. {display: 'none', flex-order: 5})
 */
export declare type StyleDefinition = {
    [property: string]: string | number | null;
};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGUtdXRpbHMuZC50cyIsInNvdXJjZXMiOlsic3R5bGUtdXRpbHMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdHlsZXNoZWV0TWFwIH0gZnJvbSAnLi4vc3R5bGVzaGVldC1tYXAvc3R5bGVzaGVldC1tYXAnO1xuaW1wb3J0IHsgTGF5b3V0Q29uZmlnT3B0aW9ucyB9IGZyb20gJy4uL3Rva2Vucy9saWJyYXJ5LWNvbmZpZyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTdHlsZVV0aWxzIHtcbiAgICBwcml2YXRlIF9zZXJ2ZXJTdHlsZXNoZWV0O1xuICAgIHByaXZhdGUgX3NlcnZlck1vZHVsZUxvYWRlZDtcbiAgICBwcml2YXRlIF9wbGF0Zm9ybUlkO1xuICAgIHByaXZhdGUgbGF5b3V0Q29uZmlnO1xuICAgIGNvbnN0cnVjdG9yKF9zZXJ2ZXJTdHlsZXNoZWV0OiBTdHlsZXNoZWV0TWFwLCBfc2VydmVyTW9kdWxlTG9hZGVkOiBib29sZWFuLCBfcGxhdGZvcm1JZDogT2JqZWN0LCBsYXlvdXRDb25maWc6IExheW91dENvbmZpZ09wdGlvbnMpO1xuICAgIC8qKlxuICAgICAqIEFwcGxpZXMgc3R5bGVzIGdpdmVuIHZpYSBzdHJpbmcgcGFpciBvciBvYmplY3QgbWFwIHRvIHRoZSBkaXJlY3RpdmUgZWxlbWVudFxuICAgICAqL1xuICAgIGFwcGx5U3R5bGVUb0VsZW1lbnQoZWxlbWVudDogSFRNTEVsZW1lbnQsIHN0eWxlOiBTdHlsZURlZmluaXRpb24gfCBzdHJpbmcsIHZhbHVlPzogc3RyaW5nIHwgbnVtYmVyIHwgbnVsbCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogQXBwbGllcyBzdHlsZXMgZ2l2ZW4gdmlhIHN0cmluZyBwYWlyIG9yIG9iamVjdCBtYXAgdG8gdGhlIGRpcmVjdGl2ZSdzIGVsZW1lbnRcbiAgICAgKi9cbiAgICBhcHBseVN0eWxlVG9FbGVtZW50cyhzdHlsZTogU3R5bGVEZWZpbml0aW9uLCBlbGVtZW50cz86IEhUTUxFbGVtZW50W10pOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIERldGVybWluZSB0aGUgRE9NIGVsZW1lbnQncyBGbGV4Ym94IGZsb3cgKGZsZXgtZGlyZWN0aW9uKVxuICAgICAqXG4gICAgICogQ2hlY2sgaW5saW5lIHN0eWxlIGZpcnN0IHRoZW4gY2hlY2sgY29tcHV0ZWQgKHN0eWxlc2hlZXQpIHN0eWxlXG4gICAgICovXG4gICAgZ2V0Rmxvd0RpcmVjdGlvbih0YXJnZXQ6IEhUTUxFbGVtZW50KTogW3N0cmluZywgc3RyaW5nXTtcbiAgICAvKipcbiAgICAgKiBGaW5kIHRoZSBET00gZWxlbWVudCdzIHJhdyBhdHRyaWJ1dGUgdmFsdWUgKGlmIGFueSlcbiAgICAgKi9cbiAgICBsb29rdXBBdHRyaWJ1dGVWYWx1ZShlbGVtZW50OiBIVE1MRWxlbWVudCwgYXR0cmlidXRlOiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRmluZCB0aGUgRE9NIGVsZW1lbnQncyBpbmxpbmUgc3R5bGUgdmFsdWUgKGlmIGFueSlcbiAgICAgKi9cbiAgICBsb29rdXBJbmxpbmVTdHlsZShlbGVtZW50OiBIVE1MRWxlbWVudCwgc3R5bGVOYW1lOiBzdHJpbmcpOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRGV0ZXJtaW5lIHRoZSBpbmxpbmUgb3IgaW5oZXJpdGVkIENTUyBzdHlsZVxuICAgICAqIE5PVEU6IHBsYXRmb3JtLXNlcnZlciBoYXMgbm8gaW1wbGVtZW50YXRpb24gZm9yIGdldENvbXB1dGVkU3R5bGVcbiAgICAgKi9cbiAgICBsb29rdXBTdHlsZShlbGVtZW50OiBIVE1MRWxlbWVudCwgc3R5bGVOYW1lOiBzdHJpbmcsIGlubGluZU9ubHk/OiBib29sZWFuKTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEFwcGxpZXMgdGhlIHN0eWxlcyB0byB0aGUgZWxlbWVudC4gVGhlIHN0eWxlcyBvYmplY3QgbWFwIG1heSBjb250YWluIGFuIGFycmF5IG9mIHZhbHVlc1xuICAgICAqIEVhY2ggdmFsdWUgd2lsbCBiZSBhZGRlZCBhcyBlbGVtZW50IHN0eWxlXG4gICAgICogS2V5cyBhcmUgc29ydGVkIHRvIGFkZCBwcmVmaXhlZCBzdHlsZXMgKGxpa2UgLXdlYmtpdC14KSBmaXJzdCwgYmVmb3JlIHRoZSBzdGFuZGFyZCBvbmVzXG4gICAgICovXG4gICAgcHJpdmF0ZSBfYXBwbHlNdWx0aVZhbHVlU3R5bGVUb0VsZW1lbnQ7XG4gICAgcHJpdmF0ZSBfc2V0U2VydmVyU3R5bGU7XG4gICAgcHJpdmF0ZSBfZ2V0U2VydmVyU3R5bGU7XG4gICAgcHJpdmF0ZSBfcmVhZFN0eWxlQXR0cmlidXRlO1xuICAgIHByaXZhdGUgX3dyaXRlU3R5bGVBdHRyaWJ1dGU7XG59XG4vKipcbiAqIERlZmluaXRpb24gb2YgYSBjc3Mgc3R5bGUuIEVpdGhlciBhIHByb3BlcnR5IG5hbWUgKGUuZy4gXCJmbGV4LWJhc2lzXCIpIG9yIGFuIG9iamVjdFxuICogbWFwIG9mIHByb3BlcnR5IG5hbWUgYW5kIHZhbHVlIChlLmcuIHtkaXNwbGF5OiAnbm9uZScsIGZsZXgtb3JkZXI6IDV9KVxuICovXG5leHBvcnQgZGVjbGFyZSB0eXBlIFN0eWxlRGVmaW5pdGlvbiA9IHtcbiAgICBbcHJvcGVydHk6IHN0cmluZ106IHN0cmluZyB8IG51bWJlciB8IG51bGw7XG59O1xuIl19