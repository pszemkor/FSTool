{"version":3,"file":"core.js","sources":["../../../src/lib/core/browser-provider.ts","../../../src/lib/core/module.ts","../../../src/lib/core/media-change.ts","../../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../../src/lib/core/tokens/library-config.ts","../../../src/lib/core/tokens/server-token.ts","../../../src/lib/core/tokens/breakpoint-token.ts","../../../src/lib/core/add-alias.ts","../../../src/lib/utils/layout-validator.ts","../../../src/lib/core/base/base2.ts","../../../src/lib/core/breakpoints/data/break-points.ts","../../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../../src/lib/utils/object-extend.ts","../../../src/lib/core/breakpoints/breakpoint-tools.ts","../../../src/lib/core/breakpoints/break-points-token.ts","../../../src/lib/core/utils/sort.ts","../../../src/lib/core/breakpoints/break-point-registry.ts","../../../src/lib/core/match-media/match-media.ts","../../../src/lib/core/match-media/mock/mock-match-media.ts","../../../src/lib/core/media-marshaller/print-hook.ts","../../../src/lib/core/utils/array.ts","../../../src/lib/core/media-observer/media-observer.ts","../../../src/lib/core/media-trigger/media-trigger.ts","../../../src/lib/utils/auto-prefixer.ts","../../../src/lib/core/style-utils/style-utils.ts","../../../src/lib/core/style-builder/style-builder.ts","../../../src/lib/core/basis-validator/basis-validator.ts","../../../src/lib/core/media-marshaller/media-marshaller.ts"],"names":["map"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {BROWSER_PROVIDER} from './browser-provider';\n\n\n/**\n * *****************************************************************\n * Define module for common Angular Layout utilities\n * *****************************************************************\n */\n@NgModule({\n  providers: [BROWSER_PROVIDER]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string = '';\n  value: any;\n\n  /**\n   * @param matches whether the mediaQuery is currently activated\n   * @param mediaQuery e.g. (min-width: 600px) and (max-width: 959px)\n   * @param mqAlias e.g. gt-sm, md, gt-lg\n   * @param suffix e.g. GtSM, Md, GtLg\n   * @param priority the priority of activation for the given breakpoint\n   */\n  constructor(public matches = false,\n              public mediaQuery = 'all',\n              public mqAlias = '',\n              public suffix = '',\n              public priority = 0) {\n  }\n\n  /** Create an exact copy of the MediaChange */\n  clone(): MediaChange {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable({providedIn: 'root'})\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** a set of configuration options for FlexLayoutModule */\nexport interface LayoutConfigOptions {\n  addFlexToParent?: boolean;\n  addOrientationBps?: boolean;\n  disableDefaultBps?: boolean;\n  disableVendorPrefixes?: boolean;\n  serverLoaded?: boolean;\n  useColumnBasisZero?: boolean;\n  printWithBreakpoints?: string[];\n  mediaTriggerAutoRestore?: boolean;\n  ssrObserveBreakpoints?: string[];\n}\n\nexport const DEFAULT_CONFIG: LayoutConfigOptions = {\n  addFlexToParent: true,\n  addOrientationBps: false,\n  disableDefaultBps: false,\n  disableVendorPrefixes: false,\n  serverLoaded: false,\n  useColumnBasisZero: true,\n  printWithBreakpoints: [],\n  mediaTriggerAutoRestore: true,\n  ssrObserveBreakpoints: [],\n};\n\nexport const LAYOUT_CONFIG = new InjectionToken<LayoutConfigOptions>(\n    'Flex Layout token, config options for the library', {\n      providedIn: 'root',\n      factory: () => DEFAULT_CONFIG\n    });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>(\n  'FlexLayoutServerLoaded', {\n    providedIn: 'root',\n    factory: () => false\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]|null>(\n  'Flex Layout token, collect all breakpoints into one provider', {\n    providedIn: 'root',\n    factory: () => null\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null): MediaChange {\n  dest = dest ? dest.clone() : new MediaChange();\n  if (source) {\n    dest.mqAlias = source.alias;\n    dest.mediaQuery = source.mediaQuery;\n    dest.suffix = source.suffix as string;\n    dest.priority = source.priority as number;\n  }\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string): [string, string, boolean] {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value: string) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction: string, wrap: string | null = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\nimport {StyleDefinition, StyleUtils} from '../style-utils/style-utils';\nimport {StyleBuilder} from '../style-builder/style-builder';\nimport {MediaMarshaller} from '../media-marshaller/media-marshaller';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nexport abstract class BaseDirective2 implements OnChanges, OnDestroy {\n\n  protected DIRECTIVE_KEY = '';\n  protected inputs: string[] = [];\n  /** The most recently used styles for the builder */\n  protected mru: StyleDefinition = {};\n  protected destroySubject: Subject<void> = new Subject();\n\n  /** Access to host element's parent DOM node */\n  protected get parentElement(): HTMLElement | null {\n    return this.elementRef.nativeElement.parentElement;\n  }\n\n  /** Access to the HTMLElement for the directive */\n  protected get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /** Access to the activated value for the directive */\n  get activatedValue(): string {\n    return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n  set activatedValue(value: string) {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, value,\n      this.marshal.activatedAlias);\n  }\n\n  /** Cache map for style computation */\n  protected styleCache: Map<string, StyleDefinition> = new Map();\n\n  protected constructor(protected elementRef: ElementRef,\n                        protected styleBuilder: StyleBuilder,\n                        protected styler: StyleUtils,\n                        protected marshal: MediaMarshaller) {\n  }\n\n  /** For @Input changes */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const bp = key.split('.').slice(1).join('.');\n        const val = changes[key].currentValue;\n        this.setValue(val, bp);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroySubject.next();\n    this.destroySubject.complete();\n    this.marshal.releaseElement(this.nativeElement);\n  }\n\n  /** Register with central marshaller service */\n  protected init(extraTriggers: Observable<any>[] = []): void {\n    this.marshal.init(\n      this.elementRef.nativeElement,\n      this.DIRECTIVE_KEY,\n      this.updateWithValue.bind(this),\n      this.clearStyles.bind(this),\n      extraTriggers\n    );\n  }\n\n  /** Add styles to the element using predefined style builder */\n  protected addStyles(input: string, parent?: Object) {\n    const builder = this.styleBuilder;\n    const useCache = builder.shouldCache;\n\n    let genStyles: StyleDefinition | undefined = this.styleCache.get(input);\n\n    if (!genStyles || !useCache) {\n      genStyles = builder.buildStyles(input, parent);\n      if (useCache) {\n        this.styleCache.set(input, genStyles);\n      }\n    }\n\n    this.mru = {...genStyles};\n    this.applyStyleToElement(genStyles);\n    builder.sideEffect(input, genStyles, parent);\n  }\n\n  /** Remove generated styles from an element using predefined style builder */\n  protected clearStyles() {\n    Object.keys(this.mru).forEach(k => {\n      this.mru[k] = '';\n    });\n    this.applyStyleToElement(this.mru);\n    this.mru = {};\n  }\n\n  /** Force trigger style updates on DOM element */\n  protected triggerUpdate() {\n    this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected getFlexFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    if (target) {\n      const [value, hasInlineValue] = this.styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this.styler.applyStyleToElements(style, elements);\n      }\n\n      return value.trim();\n    }\n\n    return 'row';\n  }\n\n  /** Applies styles given via string pair or object map to the directive element */\n  protected applyStyleToElement(style: StyleDefinition,\n                                value?: string | number,\n                                element: HTMLElement = this.nativeElement) {\n    this.styler.applyStyleToElement(element, style, value);\n  }\n\n  protected setValue(val: any, bp: string): void {\n    this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, val, bp);\n  }\n\n  protected updateWithValue(input: string) {\n    this.addStyles(input);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\n/**\n * NOTE: Smaller ranges have HIGHER priority since the match is more specific\n */\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.9px)',\n    priority: 1000,\n  },\n  {\n    alias: 'sm',\n    mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.9px)',\n    priority: 900,\n  },\n  {\n    alias: 'md',\n    mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.9px)',\n    priority: 800,\n  },\n  {\n    alias: 'lg',\n    mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.9px)',\n    priority: 700,\n  },\n  {\n    alias: 'xl',\n    mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.9px)',\n    priority: 600,\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 599.9px)',\n    priority: 950,\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 959.9px)',\n    priority: 850,\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (max-width: 1279.9px)',\n    priority: 750,\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    priority: 650,\n    mediaQuery: 'screen and (max-width: 1919.9px)',\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 600px)',\n    priority: -950,\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 960px)',\n    priority: -850,\n  }, {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1280px)',\n    priority: -750,\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: 'screen and (min-width: 1920px)',\n    priority: -650,\n  }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientation: portrait) and (max-width: 599.9px)';\nconst HANDSET_LANDSCAPE = '(orientation: landscape) and (max-width: 959.9px)';\n\nconst TABLET_PORTRAIT   = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.9px)';\nconst TABLET_LANDSCAPE  = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.9px)';\n\nconst WEB_PORTRAIT      = '(orientation: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientation: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            priority: 2000, 'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   priority: 2000, 'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   priority: 2100, 'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    priority: 2100, 'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                priority: 2200, 'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      priority: 2200, 'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       priority: 2200, 'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINT} from '../tokens/breakpoint-token';\nimport {DEFAULT_BREAKPOINTS} from '../breakpoints/data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from '../breakpoints/data/orientation-break-points';\nimport {mergeByAlias} from '../breakpoints/breakpoint-tools';\nimport {LAYOUT_CONFIG} from '../tokens/library-config';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n  new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints', {\n    providedIn: 'root',\n    factory: () => {\n      const breakpoints: any = inject(BREAKPOINT);\n      const layoutConfig = inject(LAYOUT_CONFIG);\n      const bpFlattenArray: BreakPoint[] = [].concat.apply([], (breakpoints || [])\n        .map((v: BreakPoint | BreakPoint[]) => Array.isArray(v) ? v : [v]));\n      const builtIns = (layoutConfig.disableDefaultBps ? [] : DEFAULT_BREAKPOINTS)\n        .concat(layoutConfig.addOrientationBps ? ORIENTATION_BREAKPOINTS : []);\n\n      return mergeByAlias(builtIns, bpFlattenArray);\n    }\n  });\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ninterface WithPriority {\n  priority?: number;\n}\n\n/** HOF to sort the breakpoints by descending priority */\nexport function sortDescendingPriority<T extends WithPriority>(a: T | null, b: T | null): number {\n  const priorityA = a ? a.priority || 0 : 0;\n  const priorityB = b ? b.priority || 0 : 0;\n  return priorityB - priorityA;\n}\n\n/** HOF to sort the breakpoints by ascending priority */\nexport function sortAscendingPriority<T extends WithPriority>(a: T, b: T): number {\n  const pA = a.priority || 0;\n  const pB = b.priority || 0;\n  return pA - pB;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {sortAscendingPriority} from '../utils/sort';\n\nexport type OptionalBreakPoint = BreakPoint | null;\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable({providedIn: 'root'})\nexport class BreakPointRegistry {\n  readonly items: BreakPoint[];\n\n  constructor(@Inject(BREAKPOINTS) list: BreakPoint[]) {\n    this.items = [...list].sort(sortAscendingPriority);\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): OptionalBreakPoint {\n    return !alias ? null : this.findWithPredicate(alias, (bp) => bp.alias == alias);\n  }\n\n  findByQuery(query: string): OptionalBreakPoint {\n    return this.findWithPredicate(query, (bp) => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this.items.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this.items.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this.items.map(it => !!it.suffix ? it.suffix : '');\n  }\n\n  /**\n   * Memoized lookup using custom predicate function\n   */\n  private findWithPredicate(key: string,\n      searchFn: (bp: BreakPoint) => boolean): OptionalBreakPoint {\n    let response = this.findByMap.get(key);\n    if (!response) {\n      response = this.items.find(searchFn) || null;\n      this.findByMap.set(key, response);\n    }\n    return response || null;\n\n  }\n\n  /**\n   * Memoized BreakPoint Lookups\n   */\n  private readonly findByMap = new Map<String, OptionalBreakPoint>();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject, Observable, merge, Observer} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable({providedIn: 'root'})\nexport class MatchMedia {\n  /** Initialize source with 'all' so all non-responsive APIs trigger style updates */\n  readonly source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n  registry = new Map<string, MediaQueryList>();\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Publish list of all current activations\n   */\n  get activations(): string[] {\n    const results: string[] = [];\n    this.registry.forEach((mql: MediaQueryList, key: string) => {\n      if (mql.matches) {\n        results.push(key);\n      }\n    });\n    return results;\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    const mql = this.registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   *\n   * If a mediaQuery is not specified, then ALL mediaQuery activations will\n   * be announced.\n   */\n  observe(): Observable<MediaChange>;\n  observe(mediaQueries: string[]): Observable<MediaChange>;\n  observe(mediaQueries: string[], filterOthers: boolean): Observable<MediaChange>;\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * Use deferred registration process to register breakpoints only on subscription\n   * This logic also enforces logic to register all mediaQueries BEFORE notify\n   * subscribers of notifications.\n   */\n  observe(mqList?: string[], filterOthers = false): Observable<MediaChange> {\n    if (mqList && mqList.length) {\n      const matchMedia$: Observable<MediaChange> = this._observable$.pipe(\n          filter((change: MediaChange) => {\n            return !filterOthers ? true : (mqList.indexOf(change.mediaQuery) > -1);\n          })\n      );\n      const registration$: Observable<MediaChange> = new Observable((observer: Observer<MediaChange>) => {  // tslint:disable-line:max-line-length\n        const matches: Array<MediaChange> = this.registerQuery(mqList);\n        if (matches.length) {\n          const lastChange = matches.pop()!;\n          matches.forEach((e: MediaChange) => {\n            observer.next(e);\n          });\n          this.source.next(lastChange); // last match is cached\n        }\n        observer.complete();\n      });\n      return merge(registration$, matchMedia$);\n    }\n\n    return this._observable$;\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    const list = Array.isArray(mediaQuery) ? mediaQuery : [mediaQuery];\n    const matches: MediaChange[] = [];\n\n    buildQueryCss(list, this._document);\n\n    list.forEach((query: string) => {\n      const onMQLEvent = (e: MediaQueryListEvent) => {\n        this._zone.run(() => this.source.next(new MediaChange(e.matches, query)));\n      };\n\n      let mql = this.registry.get(query);\n      if (!mql) {\n        mql = this.buildMQL(query);\n        mql.addListener(onMQLEvent);\n        this.registry.set(query, mql);\n      }\n\n      if (mql.matches) {\n        matches.push(new MediaChange(true, query));\n      }\n    });\n\n    return matches;\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return constructMql(query, isPlatformBrowser(this._platformId));\n  }\n\n  protected _observable$ = this.source.asObservable();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES: { [key: string]: any } = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param mediaQueries\n * @param _document\n */\nfunction buildQueryCss(mediaQueries: string[], _document: Document) {\n  const list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    const query = list.join(', ');\n\n    try {\n      const styleEl = _document.createElement('style');\n\n      styleEl.setAttribute('type', 'text/css');\n      if (!(styleEl as any).styleSheet) {\n        const cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n`;\n        styleEl.appendChild(_document.createTextNode(cssText));\n      }\n\n      _document.head!.appendChild(styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nfunction constructMql(query: string, isBrowser: boolean): MediaQueryList {\n  const canListen = isBrowser && !!(<Window>window).matchMedia('all').addListener;\n\n  return canListen ? (<Window>window).matchMedia(query) : {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {\n    },\n    removeListener: () => {\n    }\n  } as unknown as MediaQueryList;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n\n  autoRegisterQueries = true;   // Used for testing BreakPoint registrations\n  useOverlaps = false;          // Allow fallback to overlapping mediaQueries\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this.registry.forEach((mql: MediaQueryList) => {\n      (mql as MockMediaQueryList).destroy();\n    });\n    this.registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias: string) {\n    const bp = this._breakpoints.findByAlias(queryOrAlias);\n    return (bp && bp.mediaQuery) || queryOrAlias;\n  }\n\n  /**\n   * Manually onMediaChange any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      const bp = this._breakpoints.findByQuery(mediaQuery);\n      const alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activation of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases: string) {\n    const activate = (alias: string) => {\n      const bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery: string) {\n    const mql: MockMediaQueryList = this.registry.get(mediaQuery) as MockMediaQueryList;\n\n    if (mql && !this.isActive(mediaQuery)) {\n      this.registry.set(mediaQuery, mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current MQLs and reset the buffer */\n  private _deactivateAll() {\n    this.registry.forEach((it: MediaQueryList) => {\n      (it as MockMediaQueryList).deactivate();\n    });\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery: string) {\n    if (!this.registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return this.activations.length > 0;\n  }\n\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {\n  }\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = callback!;\n        cb.call(null, this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      const cb: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) = listener!;\n      cb.call(null, this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener | null) {\n  }\n\n  addEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | AddEventListenerOptions): void;\n\n  addEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | AddEventListenerOptions) {\n  }\n\n  removeEventListener<K extends keyof MediaQueryListEventMap>(\n      _: K,\n      __: (this: MediaQueryList,\n      ev: MediaQueryListEventMap[K]) => any,\n      ___?: boolean | EventListenerOptions): void;\n\n  removeEventListener(\n      _: string,\n      __: EventListenerOrEventListenerObject,\n      ___?: boolean | EventListenerOptions) {\n  }\n\n  dispatchEvent(_: Event): boolean {\n    return false;\n  }\n\n  onchange: MediaQueryListListener = null;\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\ntype MediaQueryListListener = ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable} from '@angular/core';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {DOCUMENT} from '@angular/common';\n\n/**\n * Interface to apply PrintHook to call anonymous `target.updateStyles()`\n */\nexport interface HookTarget {\n  activatedBreakpoints: BreakPoint[];\n  updateStyles(): void;\n}\n\nconst PRINT = 'print';\nexport const BREAKPOINT_PRINT = {\n  alias: PRINT,\n  mediaQuery: PRINT,\n  priority: 1000\n};\n\n/**\n * PrintHook - Use to intercept print MediaQuery activations and force\n *             layouts to render with the specified print alias/breakpoint\n *\n * Used in MediaMarshaller and MediaObserver\n */\n@Injectable({providedIn: 'root'})\nexport class PrintHook {\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /** Add 'print' mediaQuery: to listen for matchMedia activations */\n  withPrintQuery(queries: string[]): string[] {\n    return [...queries, PRINT];\n  }\n\n  /** Is the MediaChange event for any 'print' @media */\n  isPrintEvent(e: MediaChange): Boolean {\n    return e.mediaQuery.startsWith(PRINT);\n  }\n\n  /** What is the desired mqAlias to use while printing? */\n  get printAlias(): string[] {\n    return this.layoutConfig.printWithBreakpoints || [];\n  }\n\n  /** Lookup breakpoints associated with print aliases. */\n  get printBreakPoints(): BreakPoint[] {\n    return this.printAlias\n        .map(alias => this.breakpoints.findByAlias(alias))\n        .filter(bp => bp !== null) as BreakPoint[];\n  }\n\n  /** Lookup breakpoint associated with mediaQuery */\n  getEventBreakpoints({mediaQuery}: MediaChange): BreakPoint[] {\n    const bp = this.breakpoints.findByQuery(mediaQuery);\n    const list = bp ? [...this.printBreakPoints, bp] : this.printBreakPoints;\n\n    return list.sort(sortDescendingPriority);\n  }\n\n  /** Update event with printAlias mediaQuery information */\n  updateEvent(event: MediaChange): MediaChange {\n    let bp: OptionalBreakPoint = this.breakpoints.findByQuery(event.mediaQuery);\n    if (this.isPrintEvent(event)) {\n      // Reset from 'print' to first (highest priority) print breakpoint\n      bp = this.getEventBreakpoints(event)[0];\n      event.mediaQuery = bp ? bp.mediaQuery : '';\n    }\n    return mergeAlias(event, bp);\n  }\n\n\n  // registeredBeforeAfterPrintHooks tracks if we registered the `beforeprint`\n  //  and `afterprint` event listeners.\n  private registeredBeforeAfterPrintHooks: boolean = false;\n\n  // isPrintingBeforeAfterEvent is used to track if we are printing from within\n  // a `beforeprint` event handler. This prevents the typicall `stopPrinting`\n  // form `interceptEvents` so that printing is not stopped while the dialog\n  // is still open. This is an extension of the `isPrinting` property on\n  // browsers which support `beforeprint` and `afterprint` events.\n  private isPrintingBeforeAfterEvent: boolean = false;\n\n  // registerBeforeAfterPrintHooks registers a `beforeprint` event hook so we can\n  // trigger print styles synchronously and apply proper layout styles.\n  // It is a noop if the hooks have already been registered or if the document's\n  // `defaultView` is not available.\n  private registerBeforeAfterPrintHooks(target: HookTarget) {\n    // `defaultView` may be null when rendering on the server or in other contexts.\n    if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) {\n      return;\n    }\n\n    this.registeredBeforeAfterPrintHooks = true;\n\n    // Could we have teardown logic to remove if there are no print listeners being used?\n    this._document.defaultView.addEventListener('beforeprint', () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      if (!this.isPrinting) {\n        this.isPrintingBeforeAfterEvent = true;\n        this.startPrinting(target, this.getEventBreakpoints(new MediaChange(true, PRINT)));\n        target.updateStyles();\n      }\n    });\n\n    this._document.defaultView.addEventListener('afterprint', () => {\n      // If we aren't already printing, start printing and update the styles as\n      // if there was a regular print `MediaChange`(from matchMedia).\n      this.isPrintingBeforeAfterEvent = false;\n      if (this.isPrinting) {\n        this.stopPrinting(target);\n        target.updateStyles();\n      }\n    });\n  }\n\n  /**\n   * Prepare RxJs filter operator with partial application\n   * @return pipeable filter predicate\n   */\n  interceptEvents(target: HookTarget) {\n    this.registerBeforeAfterPrintHooks(target);\n\n    return (event: MediaChange) => {\n      if (this.isPrintEvent(event)) {\n        if (event.matches && !this.isPrinting) {\n          this.startPrinting(target, this.getEventBreakpoints(event));\n          target.updateStyles();\n\n        } else if (!event.matches && this.isPrinting && !this.isPrintingBeforeAfterEvent) {\n          this.stopPrinting(target);\n          target.updateStyles();\n        }\n      } else {\n        this.collectActivations(event);\n      }\n    };\n  }\n\n  /** Stop mediaChange event propagation in event streams */\n  blockPropagation() {\n    return (event: MediaChange): boolean => {\n      return !(this.isPrinting || this.isPrintEvent(event));\n    };\n  }\n\n  /**\n   * Save current activateBreakpoints (for later restore)\n   * and substitute only the printAlias breakpoint\n   */\n  protected startPrinting(target: HookTarget, bpList: OptionalBreakPoint[]) {\n    this.isPrinting = true;\n    target.activatedBreakpoints = this.queue.addPrintBreakpoints(bpList);\n  }\n\n  /** For any print de-activations, reset the entire print queue */\n  protected stopPrinting(target: HookTarget) {\n    target.activatedBreakpoints = this.deactivations;\n    this.deactivations = [];\n    this.queue.clear();\n    this.isPrinting = false;\n  }\n\n  /**\n   * To restore pre-Print Activations, we must capture the proper\n   * list of breakpoint activations BEFORE print starts. OnBeforePrint()\n   * is supported; so 'print' mediaQuery activations are used as a fallback\n   * in browsers without `beforeprint` support.\n   *\n   * >  But activated breakpoints are deactivated BEFORE 'print' activation.\n   *\n   * Let's capture all de-activations using the following logic:\n   *\n   *  When not printing:\n   *    - clear cache when activating non-print breakpoint\n   *    - update cache (and sort) when deactivating\n   *\n   *  When printing:\n   *    - sort and save when starting print\n   *    - restore as activatedTargets and clear when stop printing\n   */\n  collectActivations(event: MediaChange) {\n    if (!this.isPrinting || this.isPrintingBeforeAfterEvent) {\n      if (!event.matches) {\n        const bp = this.breakpoints.findByQuery(event.mediaQuery);\n        if (bp) {   // Deactivating a breakpoint\n          this.deactivations.push(bp);\n          this.deactivations.sort(sortDescendingPriority);\n        }\n      } else if (!this.isPrintingBeforeAfterEvent) {\n        // Only clear deactivations if we aren't printing from a `beforeprint` event.\n        // Otherwise this will clear before `stopPrinting()` is called to restore\n        // the pre-Print Activations.\n        this.deactivations = [];\n      }\n    }\n  }\n\n  /** Is this service currently in Print-mode ? */\n  private isPrinting = false;\n  private queue: PrintQueue = new PrintQueue();\n  private deactivations: BreakPoint[] = [];\n\n}\n\n// ************************************************************************\n// Internal Utility class 'PrintQueue'\n// ************************************************************************\n\n/**\n * Utility class to manage print breakpoints + activatedBreakpoints\n * with correct sorting WHILE printing\n */\nclass PrintQueue {\n  /** Sorted queue with prioritized print breakpoints */\n  printBreakpoints: BreakPoint[] = [];\n\n  addPrintBreakpoints(bpList: OptionalBreakPoint[]): BreakPoint[] {\n    bpList.push(BREAKPOINT_PRINT);\n    bpList.sort(sortDescendingPriority);\n    bpList.forEach(bp => this.addBreakpoint(bp));\n\n    return this.printBreakpoints;\n  }\n\n  /** Add Print breakpoint to queue */\n  addBreakpoint(bp: OptionalBreakPoint) {\n    if (!!bp) {\n      const bpInList = this.printBreakpoints.find(it => it.mediaQuery === bp.mediaQuery);\n      if (bpInList === undefined) {\n        // If this is a `printAlias` breakpoint, then append. If a true 'print' breakpoint,\n        // register as highest priority in the queue\n        this.printBreakpoints = isPrintBreakPoint(bp) ? [bp, ...this.printBreakpoints]\n            : [...this.printBreakpoints, bp];\n      }\n    }\n  }\n\n  /** Restore original activated breakpoints and clear internal caches */\n  clear() {\n    this.printBreakpoints = [];\n  }\n}\n\n// ************************************************************************\n// Internal Utility methods\n// ************************************************************************\n\n/** Only support intercept queueing if the Breakpoint is a print @media query */\nfunction isPrintBreakPoint(bp: OptionalBreakPoint) {\n  return bp ? bp.mediaQuery.startsWith(PRINT) : false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Wraps the provided value in an array, unless the provided value is an array. */\nexport function coerceArray<T>(value: T | T[]): T[] {\n  return Array.isArray(value) ? value : [value];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {Subject, asapScheduler, Observable, of} from 'rxjs';\nimport {debounceTime, filter, map, switchMap, takeUntil} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {PrintHook} from '../media-marshaller/print-hook';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\n\nimport {sortDescendingPriority} from '../utils/sort';\nimport {coerceArray} from '../utils/array';\n\n\n/**\n * MediaObserver enables applications to listen for 1..n mediaQuery activations and to determine\n * if a mediaQuery is currently activated.\n *\n * Since a breakpoint change will first deactivate 1...n mediaQueries and then possibly activate\n * 1..n mediaQueries, the MediaObserver will debounce notifications and report ALL *activations*\n * in 1 event notification. The reported activations will be sorted in descending priority order.\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * Note: Developers should note that only mediaChange activations (not de-activations)\n *       are announced by the MediaObserver.\n *\n *  @usage\n *\n *  // RxJS\n *  import { filter } from 'rxjs/operators';\n *  import { MediaObserver } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status: string = '';\n *\n *    constructor(mediaObserver: MediaObserver) {\n *      const media$ = mediaObserver.asObservable().pipe(\n *        filter((changes: MediaChange[]) => true)   // silly noop filter\n *      );\n *\n *      media$.subscribe((changes: MediaChange[]) => {\n *        let status = '';\n *        changes.forEach( change => {\n *          status += `'${change.mqAlias}' = (${change.mediaQuery}) <br/>` ;\n *        });\n *        this.status = status;\n *     });\n *\n *    }\n *  }\n */\n@Injectable({providedIn: 'root'})\nexport class MediaObserver implements OnDestroy {\n\n  /**\n   * @deprecated Use `asObservable()` instead.\n   * @breaking-change 8.0.0-beta.25\n   * @deletion-target 10.0.0\n   */\n  readonly media$: Observable<MediaChange>;\n\n  /** Filter MediaChange notifications for overlapping breakpoints */\n  filterOverlaps = false;\n\n  constructor(protected breakpoints: BreakPointRegistry,\n              protected matchMedia: MatchMedia,\n              protected hook: PrintHook) {\n    this._media$ = this.watchActivations();\n    this.media$ = this._media$.pipe(\n      filter((changes: MediaChange[]) => changes.length > 0),\n      map((changes: MediaChange[]) => changes[0])\n    );\n  }\n\n  /**\n   * Completes the active subject, signalling to all complete for all\n   * MediaObserver subscribers\n   */\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  // ************************************************\n  // Public Methods\n  // ************************************************\n\n  /**\n   * Observe changes to current activation 'list'\n   */\n  asObservable(): Observable<MediaChange[]> {\n    return this._media$;\n  }\n\n  /**\n   * Allow programmatic query to determine if one or more media query/alias match\n   * the current viewport size.\n   * @param value One or more media queries (or aliases) to check.\n   * @returns Whether any of the media queries match.\n   */\n  isActive(value: string | string[]): boolean {\n    const aliases = splitQueries(coerceArray(value));\n    return aliases.some(alias => {\n      const query = toMediaQuery(alias, this.breakpoints);\n      return this.matchMedia.isActive(query);\n    });\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private watchActivations() {\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n    return this.buildObservable(queries);\n  }\n\n  /**\n   * Only pass/announce activations (not de-activations)\n   *\n   * Since multiple-mediaQueries can be activation in a cycle,\n   * gather all current activations into a single list of changes to observers\n   *\n   * Inject associated (if any) alias information into the MediaChange event\n   * - Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n   * - Exclude print activations that do not have an associated mediaQuery\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private buildObservable(mqList: string[]): Observable<MediaChange[]> {\n    const hasChanges = (changes: MediaChange[]) => {\n      const isValidQuery = (change: MediaChange) => (change.mediaQuery.length > 0);\n      return (changes.filter(isValidQuery).length > 0);\n    };\n    const excludeOverlaps = (changes: MediaChange[]) => {\n      return !this.filterOverlaps ? changes : changes.filter(change => {\n        const bp = this.breakpoints.findByQuery(change.mediaQuery);\n        return !bp ? true : !bp.overlapping;\n      });\n    };\n\n    /**\n     */\n    return this.matchMedia\n        .observe(this.hook.withPrintQuery(mqList))\n        .pipe(\n            filter((change: MediaChange) => change.matches),\n            debounceTime(0, asapScheduler),\n            switchMap(_ => of(this.findAllActivations())),\n            map(excludeOverlaps),\n            filter(hasChanges),\n            takeUntil(this.destroyed$)\n        );\n  }\n\n  /**\n   * Find all current activations and prepare single list of activations\n   * sorted by descending priority.\n   */\n  private findAllActivations(): MediaChange[] {\n    const mergeMQAlias = (change: MediaChange) => {\n      let bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n      return mergeAlias(change, bp);\n    };\n    const replaceWithPrintAlias = (change: MediaChange) => {\n      return this.hook.isPrintEvent(change) ? this.hook.updateEvent(change) : change;\n    };\n\n    return this.matchMedia\n        .activations\n        .map(query => new MediaChange(true, query))\n        .map(replaceWithPrintAlias)\n        .map(mergeMQAlias)\n        .sort(sortDescendingPriority);\n  }\n\n  private readonly _media$: Observable<MediaChange[]>;\n  private readonly destroyed$ = new Subject<void>();\n}\n\n/**\n * Find associated breakpoint (if any)\n */\nfunction toMediaQuery(query: string, locator: BreakPointRegistry) {\n  const bp = locator.findByAlias(query) || locator.findByQuery(query);\n  return bp ? bp.mediaQuery : query;\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n  return queries.map((query: string) => query.split(','))\n                .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\nimport {fromEvent, Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {mergeAlias} from '../add-alias';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry, OptionalBreakPoint} from '../breakpoints/break-point-registry';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n/**\n * Class\n */\n@Injectable({providedIn: 'root'})\nexport class MediaTrigger {\n\n  constructor(\n      protected breakpoints: BreakPointRegistry,\n      protected matchMedia: MatchMedia,\n      @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n      @Inject(PLATFORM_ID) protected _platformId: Object,\n      @Inject(DOCUMENT) protected _document: any) {\n  }\n\n  /**\n   * Manually activate range of breakpoints\n   * @param list array of mediaQuery or alias strings\n   */\n  activate(list: string[]) {\n    list = list.map(it => it.trim()); // trim queries\n\n    this.saveActivations();\n    this.deactivateAll();\n    this.setActivations(list);\n\n    this.prepareAutoRestore();\n  }\n\n  /**\n   * Restore original, 'real' breakpoints and emit events\n   * to trigger stream notification\n   */\n  restore() {\n    if (this.hasCachedRegistryMatches) {\n      const extractQuery = (change: MediaChange) => change.mediaQuery;\n      const list = this.originalActivations.map(extractQuery);\n      try {\n\n        this.deactivateAll();\n        this.restoreRegistryMatches();\n        this.setActivations(list);\n\n      } finally {\n        this.originalActivations = [];\n        if (this.resizeSubscription) {\n          this.resizeSubscription.unsubscribe();\n        }\n      }\n    }\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Whenever window resizes, immediately auto-restore original\n   * activations (if we are simulating activations)\n   */\n  private prepareAutoRestore() {\n    const isBrowser = isPlatformBrowser(this._platformId) && this._document;\n    const enableAutoRestore = isBrowser && this.layoutConfig.mediaTriggerAutoRestore;\n\n    if (enableAutoRestore) {\n      const resize$ = fromEvent(window, 'resize').pipe(take(1));\n      this.resizeSubscription = resize$.subscribe(this.restore.bind(this));\n    }\n  }\n\n  /**\n   * Notify all matchMedia subscribers of de-activations\n   *\n   * Note: we must force 'matches' updates for\n   *       future matchMedia::activation lookups\n   */\n  private deactivateAll() {\n    const list = this.currentActivations;\n\n    this.forceRegistryMatches(list, false);\n    this.simulateMediaChanges(list, false);\n  }\n\n  /**\n   * Cache current activations as sorted, prioritized list of MediaChanges\n   */\n  private saveActivations() {\n    if (!this.hasCachedRegistryMatches) {\n      const toMediaChange = (query: string) => new MediaChange(true, query);\n      const mergeMQAlias = (change: MediaChange) => {\n        const bp: OptionalBreakPoint = this.breakpoints.findByQuery(change.mediaQuery);\n        return mergeAlias(change, bp);\n      };\n\n      this.originalActivations = this.currentActivations\n          .map(toMediaChange)\n          .map(mergeMQAlias)\n          .sort(sortDescendingPriority);\n\n      this.cacheRegistryMatches();\n    }\n  }\n\n  /**\n   * Force set manual activations for specified mediaQuery list\n   */\n  private setActivations(list: string[]) {\n    if (!!this.originalRegistry) {\n      this.forceRegistryMatches(list, true);\n    }\n    this.simulateMediaChanges(list);\n  }\n\n  /**\n   * For specified mediaQuery list manually simulate activations or deactivations\n   */\n  private simulateMediaChanges(queries: string[], matches = true) {\n    const toMediaQuery = (query: string) => {\n      const locator = this.breakpoints;\n      const bp = locator.findByAlias(query) || locator.findByQuery(query);\n      return bp ? bp.mediaQuery : query;\n    };\n    const emitChangeEvent = (query: string) => this.emitChangeEvent(matches, query);\n\n    queries.map(toMediaQuery).forEach(emitChangeEvent);\n  }\n\n  /**\n   * Replace current registry with simulated registry...\n   * Note: this is required since MediaQueryList::matches is 'readOnly'\n   */\n  private forceRegistryMatches(queries: string[], matches: boolean) {\n    const registry = new Map<string, MediaQueryList>();\n    queries.forEach(query => {\n      registry.set(query, {matches: matches} as MediaQueryList);\n    });\n\n    this.matchMedia.registry = registry;\n  }\n\n  /**\n   * Save current MatchMedia::registry items.\n   */\n  private cacheRegistryMatches() {\n    const target = this.originalRegistry;\n\n    target.clear();\n    this.matchMedia.registry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n    this.hasCachedRegistryMatches = true;\n  }\n\n  /**\n   * Restore original, 'true' registry\n   */\n  private restoreRegistryMatches() {\n    const target = this.matchMedia.registry;\n\n    target.clear();\n    this.originalRegistry.forEach((value: MediaQueryList, key: string) => {\n      target.set(key, value);\n    });\n\n    this.originalRegistry.clear();\n    this.hasCachedRegistryMatches = false;\n  }\n\n  /**\n   * Manually emit a MediaChange event via the MatchMedia to MediaMarshaller and MediaObserver\n   */\n  private emitChangeEvent(matches: boolean, query: string) {\n    this.matchMedia.source.next(new MediaChange(matches, query));\n  }\n\n  private get currentActivations() {\n    return this.matchMedia.activations;\n  }\n\n  private hasCachedRegistryMatches = false;\n  private originalActivations: MediaChange[] = [];\n  private originalRegistry: Map<string, MediaQueryList> = new Map<string, MediaQueryList>();\n\n  private resizeSubscription!: Subscription;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target: {[key: string]: any | null}) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(+value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {LAYOUT_CONFIG, LayoutConfigOptions} from '../tokens/library-config';\n\n@Injectable({providedIn: 'root'})\nexport class StyleUtils {\n\n  constructor(private _serverStylesheet: StylesheetMap,\n              @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId: Object,\n              @Inject(LAYOUT_CONFIG) private layoutConfig: LayoutConfigOptions) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement,\n                      style: StyleDefinition | string,\n                      value: string | number | null = null) {\n    let styles: StyleDefinition = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.layoutConfig.disableVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return isPlatformBrowser(this._platformId) ?\n      element.style.getPropertyValue(styleName) : this._getServerStyle(element, styleName);\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : '';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: StyleDefinition,\n                                         element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const el = styles[key];\n      const values: (string | number | null)[] = Array.isArray(el) ? el : [el];\n      values.sort();\n      for (let value of values) {\n        value = value ? value + '' : '';\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          isPlatformBrowser(this._platformId) ?\n            element.style.setProperty(key, value) : this._setServerStyle(element, key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n\n  private _setServerStyle(element: any, styleName: string, styleValue?: string|null) {\n    styleName = styleName.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    const styleMap = this._readStyleAttribute(element);\n    styleMap[styleName] = styleValue || '';\n    this._writeStyleAttribute(element, styleMap);\n  }\n\n  private _getServerStyle(element: any, styleName: string): string {\n    const styleMap = this._readStyleAttribute(element);\n    return styleMap[styleName] || '';\n  }\n\n  private _readStyleAttribute(element: any): {[name: string]: string} {\n    const styleMap: {[name: string]: string} = {};\n    const styleAttribute = element.getAttribute('style');\n    if (styleAttribute) {\n      const styleList = styleAttribute.split(/;+/g);\n      for (let i = 0; i < styleList.length; i++) {\n        const style = styleList[i].trim();\n        if (style.length > 0) {\n          const colonIndex = style.indexOf(':');\n          if (colonIndex === -1) {\n            throw new Error(`Invalid CSS style: ${style}`);\n          }\n          const name = style.substr(0, colonIndex).trim();\n          styleMap[name] = style.substr(colonIndex + 1).trim();\n        }\n      }\n    }\n    return styleMap;\n  }\n\n  private _writeStyleAttribute(element: any, styleMap: {[name: string]: string}) {\n    let styleAttrValue = '';\n    for (const key in styleMap) {\n      const newValue = styleMap[key];\n      if (newValue) {\n        styleAttrValue += key + ':' + styleMap[key] + ';';\n      }\n    }\n    element.setAttribute('style', styleAttrValue);\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {StyleDefinition} from '../style-utils/style-utils';\n\n/** A class that encapsulates CSS style generation for common directives */\nexport abstract class StyleBuilder {\n\n  /** Whether to cache the generated output styles */\n  shouldCache = true;\n\n  /** Build the styles given an input string and configuration object from a host */\n  abstract buildStyles(input: string, parent?: Object): StyleDefinition;\n\n  /**\n   * Run a side effect computation given the input string and the computed styles\n   * from the build task and the host configuration object\n   * NOTE: This should be a no-op unless an algorithm is provided in a subclass\n   */\n  sideEffect(_input: string, _styles: StyleDefinition, _parent?: Object) {\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {filter, tap} from 'rxjs/operators';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {sortDescendingPriority} from '../utils/sort';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\n\nimport {PrintHook, HookTarget} from './print-hook';\nimport {mergeAlias} from '../add-alias';\n\ntype ClearCallback = () => void;\ntype UpdateCallback = (val: any) => void;\ntype Builder = UpdateCallback | ClearCallback;\n\ntype ValueMap = Map<string, string>;\ntype BreakpointMap = Map<string, ValueMap>;\ntype ElementMap = Map<HTMLElement, BreakpointMap>;\ntype ElementKeyMap = WeakMap<HTMLElement, Set<string>>;\ntype SubscriptionMap = Map<string, Subscription>;\ntype WatcherMap = WeakMap<HTMLElement, SubscriptionMap>;\ntype BuilderMap = WeakMap<HTMLElement, Map<string, Builder>>;\n\nexport interface ElementMatcher {\n  element: HTMLElement;\n  key: string;\n  value: any;\n}\n\n/**\n * MediaMarshaller - register responsive values from directives and\n *                   trigger them based on media query events\n */\n@Injectable({providedIn: 'root'})\nexport class MediaMarshaller {\n  private activatedBreakpoints: BreakPoint[] = [];\n  private elementMap: ElementMap = new Map();\n  private elementKeyMap: ElementKeyMap = new WeakMap();\n  private watcherMap: WatcherMap = new WeakMap();     // special triggers to update elements\n  private updateMap: BuilderMap = new WeakMap();      // callback functions to update styles\n  private clearMap: BuilderMap = new WeakMap();       // callback functions to clear styles\n\n  private subject: Subject<ElementMatcher> = new Subject();\n\n  get activatedAlias(): string {\n    return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';\n  }\n\n  constructor(protected matchMedia: MatchMedia,\n              protected breakpoints: BreakPointRegistry,\n              protected hook: PrintHook) {\n    this.observeActivations();\n  }\n\n  /**\n   * Update styles on breakpoint activates or deactivates\n   * @param mc\n   */\n  onMediaChange(mc: MediaChange) {\n    const bp: BreakPoint | null = this.findByQuery(mc.mediaQuery);\n    if (bp) {\n      mc = mergeAlias(mc, bp);\n\n      if (mc.matches && this.activatedBreakpoints.indexOf(bp) === -1) {\n        this.activatedBreakpoints.push(bp);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n\n      } else if (!mc.matches && this.activatedBreakpoints.indexOf(bp) !== -1) {\n        // Remove the breakpoint when it's deactivated\n        this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(bp), 1);\n        this.activatedBreakpoints.sort(sortDescendingPriority);\n\n        this.updateStyles();\n      }\n    }\n  }\n\n  /**\n   * initialize the marshaller with necessary elements for delegation on an element\n   * @param element\n   * @param key\n   * @param updateFn optional callback so that custom bp directives don't have to re-provide this\n   * @param clearFn optional callback so that custom bp directives don't have to re-provide this\n   * @param extraTriggers other triggers to force style updates (e.g. layout, directionality, etc)\n   */\n  init(element: HTMLElement,\n       key: string,\n       updateFn?: UpdateCallback,\n       clearFn?: ClearCallback,\n       extraTriggers: Observable<any>[] = []): void {\n\n    initBuilderMap(this.updateMap, element, key, updateFn);\n    initBuilderMap(this.clearMap, element, key, clearFn);\n\n    this.buildElementKeyMap(element, key);\n    this.watchExtraTriggers(element, key, extraTriggers);\n  }\n\n  /**\n   * get the value for an element and key and optionally a given breakpoint\n   * @param element\n   * @param key\n   * @param bp\n   */\n  getValue(element: HTMLElement, key: string, bp?: string): any {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = bp !== undefined ? bpMap.get(bp) : this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * whether the element has values for a given key\n   * @param element\n   * @param key\n   */\n  hasValue(element: HTMLElement, key: string): boolean {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const values = this.getActivatedValues(bpMap, key);\n      if (values) {\n        return values.get(key) !== undefined || false;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the value for an input on a directive\n   * @param element the element in question\n   * @param key the type of the directive (e.g. flex, layout-gap, etc)\n   * @param bp the breakpoint suffix (empty string = default)\n   * @param val the value for the breakpoint\n   */\n  setValue(element: HTMLElement, key: string, val: any, bp: string): void {\n    let bpMap: BreakpointMap | undefined = this.elementMap.get(element);\n    if (!bpMap) {\n      bpMap = new Map().set(bp, new Map().set(key, val));\n      this.elementMap.set(element, bpMap);\n    } else {\n      const values = (bpMap.get(bp) || new Map()).set(key, val);\n      bpMap.set(bp, values);\n      this.elementMap.set(element, bpMap);\n    }\n    const value = this.getValue(element, key);\n    if (value !== undefined) {\n      this.updateElement(element, key, value);\n    }\n  }\n\n  /** Track element value changes for a specific key */\n  trackValue(element: HTMLElement, key: string): Observable<ElementMatcher> {\n    return this.subject\n        .asObservable()\n        .pipe(filter(v => v.element === element && v.key === key));\n  }\n\n  /** update all styles for all elements on the current breakpoint */\n  updateStyles(): void {\n    this.elementMap.forEach((bpMap, el) => {\n      const keyMap = new Set(this.elementKeyMap.get(el)!);\n      let valueMap = this.getActivatedValues(bpMap);\n\n      if (valueMap) {\n        valueMap.forEach((v, k) => {\n          this.updateElement(el, k, v);\n          keyMap.delete(k);\n        });\n      }\n\n      keyMap.forEach(k => {\n        valueMap = this.getActivatedValues(bpMap, k);\n        if (valueMap) {\n          const value = valueMap.get(k);\n          this.updateElement(el, k, value);\n        } else {\n          this.clearElement(el, k);\n        }\n      });\n\n    });\n  }\n\n  /**\n   * clear the styles for a given element\n   * @param element\n   * @param key\n   */\n  clearElement(element: HTMLElement, key: string): void {\n    const builders = this.clearMap.get(element);\n    if (builders) {\n      const clearFn: ClearCallback = builders.get(key) as ClearCallback;\n      if (!!clearFn) {\n        clearFn();\n        this.subject.next({element, key, value: ''});\n      }\n    }\n  }\n\n  /**\n   * update a given element with the activated values for a given key\n   * @param element\n   * @param key\n   * @param value\n   */\n  updateElement(element: HTMLElement, key: string, value: any): void {\n    const builders = this.updateMap.get(element);\n    if (builders) {\n      const updateFn: UpdateCallback = builders.get(key) as UpdateCallback;\n      if (!!updateFn) {\n        updateFn(value);\n        this.subject.next({element, key, value});\n      }\n    }\n  }\n\n  /**\n   * release all references to a given element\n   * @param element\n   */\n  releaseElement(element: HTMLElement): void {\n    const watcherMap = this.watcherMap.get(element);\n    if (watcherMap) {\n      watcherMap.forEach(s => s.unsubscribe());\n      this.watcherMap.delete(element);\n    }\n    const elementMap = this.elementMap.get(element);\n    if (elementMap) {\n      elementMap.forEach((_, s) => elementMap.delete(s));\n      this.elementMap.delete(element);\n    }\n  }\n\n  /**\n   * trigger an update for a given element and key (e.g. layout)\n   * @param element\n   * @param key\n   */\n  triggerUpdate(element: HTMLElement, key?: string): void {\n    const bpMap = this.elementMap.get(element);\n    if (bpMap) {\n      const valueMap = this.getActivatedValues(bpMap, key);\n      if (valueMap) {\n        if (key) {\n          this.updateElement(element, key, valueMap.get(key));\n        } else {\n          valueMap.forEach((v, k) => this.updateElement(element, k, v));\n        }\n      }\n    }\n  }\n\n  /** Cross-reference for HTMLElement with directive key */\n  private buildElementKeyMap(element: HTMLElement, key: string) {\n    let keyMap = this.elementKeyMap.get(element);\n    if (!keyMap) {\n      keyMap = new Set();\n      this.elementKeyMap.set(element, keyMap);\n    }\n    keyMap.add(key);\n  }\n\n  /**\n   * Other triggers that should force style updates:\n   * - directionality\n   * - layout changes\n   * - mutationobserver updates\n   */\n  private watchExtraTriggers(element: HTMLElement,\n                             key: string,\n                             triggers: Observable<any>[]) {\n    if (triggers && triggers.length) {\n      let watchers = this.watcherMap.get(element);\n      if (!watchers) {\n        watchers = new Map();\n        this.watcherMap.set(element, watchers);\n      }\n      const subscription = watchers.get(key);\n      if (!subscription) {\n        const newSubscription = merge(...triggers).subscribe(() => {\n          const currentValue = this.getValue(element, key);\n          this.updateElement(element, key, currentValue);\n        });\n        watchers.set(key, newSubscription);\n      }\n    }\n  }\n\n  /** Breakpoint locator by mediaQuery */\n  private findByQuery(query: string) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * get the fallback breakpoint for a given element, starting with the current breakpoint\n   * @param bpMap\n   * @param key\n   */\n  private getActivatedValues(bpMap: BreakpointMap, key?: string): ValueMap | undefined {\n    for (let i = 0; i < this.activatedBreakpoints.length; i++) {\n      const activatedBp = this.activatedBreakpoints[i];\n      const valueMap = bpMap.get(activatedBp.alias);\n      if (valueMap) {\n        if (key === undefined || valueMap.has(key)) {\n          return valueMap;\n        }\n      }\n    }\n    const lastHope = bpMap.get('');\n    return (key === undefined || lastHope && lastHope.has(key)) ? lastHope : undefined;\n  }\n\n  /**\n   * Watch for mediaQuery breakpoint activations\n   */\n  private observeActivations() {\n    const target = this as unknown as HookTarget;\n    const queries = this.breakpoints.items.map(bp => bp.mediaQuery);\n\n    this.matchMedia\n        .observe(this.hook.withPrintQuery(queries))\n        .pipe(\n            tap(this.hook.interceptEvents(target)),\n            filter(this.hook.blockPropagation())\n        )\n        .subscribe(this.onMediaChange.bind(this));\n  }\n\n}\n\nfunction initBuilderMap(map: BuilderMap,\n                        element: HTMLElement,\n                        key: string,\n                        input?: UpdateCallback | ClearCallback): void {\n  if (input !== undefined) {\n    let oldMap = map.get(element);\n    if (!oldMap) {\n      oldMap = new Map();\n      map.set(element, oldMap);\n    }\n    oldMap.set(key, input);\n  }\n}\n"]}