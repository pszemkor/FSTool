{"version":3,"file":"extended.js","sources":["../../../src/lib/extended/img-src/img-src.ts","../../../src/lib/extended/class/class.ts","../../../src/lib/extended/show-hide/show-hide.ts","../../../src/lib/extended/style/style-transforms.ts","../../../src/lib/extended/style/style.ts","../../../src/lib/extended/module.ts"],"names":["inputs","selector","buildMapFromList"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Inject, PLATFORM_ID, Injectable, Input} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  SERVER_TOKEN,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\n@Injectable({providedIn: 'root'})\nexport class ImgSrcStyleBuilder extends StyleBuilder {\n  buildStyles(url: string) {\n    return {'content': url ? `url(${url})` : ''};\n  }\n}\n\n@Directive()\nexport class ImgSrcDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'img-src';\n  protected defaultSrc = '';\n\n  @Input('src')\n  set src(val: string) {\n    this.defaultSrc = val;\n    this.setValue(this.defaultSrc, '');\n  }\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: ImgSrcStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n    this.setValue(this.nativeElement.getAttribute('src') || '', '');\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.setAttribute('src', '');\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected updateWithValue(value?: string) {\n    const url = value || this.defaultSrc;\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.addStyles(url);\n    } else {\n      this.nativeElement.setAttribute('src', url);\n    }\n  }\n\n  protected styleCache = imgSrcCache;\n}\n\nconst imgSrcCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'src.xs', 'src.sm', 'src.md', 'src.lg', 'src.xl',\n  'src.lt-sm', 'src.lt-md', 'src.lt-lg', 'src.lt-xl',\n  'src.gt-xs', 'src.gt-sm', 'src.gt-md', 'src.gt-lg'\n];\n\nconst selector = `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`;\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({selector, inputs})\nexport class DefaultImgSrcDirective extends ImgSrcDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {BaseDirective2, StyleUtils, MediaMarshaller} from '@angular/flex-layout/core';\n\n@Directive()\nexport class ClassDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngClass';\n\n  /**\n   * Capture class assignments so we cache the default classes\n   * which are merged with activated styles and used as fallbacks.\n   */\n  @Input('class')\n  set klass(val: string) {\n    this.ngClassInstance.klass = val;\n    this.setValue(val, '');\n  }\n\n  constructor(elementRef: ElementRef,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              iterableDiffers: IterableDiffers,\n              keyValueDiffers: KeyValueDiffers,\n              renderer2: Renderer2,\n              @Optional() @Self() protected readonly ngClassInstance: NgClass) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngClassInstance) {\n      // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n      // the same host element; since the responsive variations may be defined...\n      this.ngClassInstance = new NgClass(iterableDiffers, keyValueDiffers, elementRef, renderer2);\n    }\n    this.init();\n    this.setValue('', '');\n  }\n\n  protected updateWithValue(value: any) {\n    this.ngClassInstance.ngClass = value;\n    this.ngClassInstance.ngDoCheck();\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    this.ngClassInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngClass', 'ngClass.xs', 'ngClass.sm', 'ngClass.md', 'ngClass.lg', 'ngClass.xl',\n  'ngClass.lt-sm', 'ngClass.lt-md', 'ngClass.lt-lg', 'ngClass.lt-xl',\n  'ngClass.gt-xs', 'ngClass.gt-sm', 'ngClass.gt-md', 'ngClass.gt-lg'\n];\n\nconst selector = `\n  [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n  [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n  [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngClass.\n * This maintains the core functionality of 'ngClass' and adds responsive API\n * Note: this class is a no-op when rendered on the server\n */\n@Directive({selector, inputs})\nexport class DefaultClassDirective extends ClassDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Inject,\n  PLATFORM_ID,\n  Injectable,\n  AfterViewInit,\n} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BaseDirective2,\n  LAYOUT_CONFIG,\n  LayoutConfigOptions,\n  MediaMarshaller,\n  SERVER_TOKEN,\n  StyleUtils,\n  StyleBuilder,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {takeUntil} from 'rxjs/operators';\n\nexport interface ShowHideParent {\n  display: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowHideStyleBuilder extends StyleBuilder {\n  buildStyles(show: string, parent: ShowHideParent) {\n    const shouldShow = show === 'true';\n    return {'display': shouldShow ? parent.display : 'none'};\n  }\n}\n\n@Directive()\nexport class ShowHideDirective extends BaseDirective2 implements AfterViewInit, OnChanges {\n  protected DIRECTIVE_KEY = 'show-hide';\n\n  /** Original dom Elements CSS display style */\n  protected display: string = '';\n  protected hasLayout = false;\n  protected hasFlexChild = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: ShowHideStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              @Inject(LAYOUT_CONFIG) protected layoutConfig: LayoutConfigOptions,\n              @Inject(PLATFORM_ID) protected platformId: Object,\n              @Inject(SERVER_TOKEN) protected serverModuleLoaded: boolean) {\n    super(elementRef, styleBuilder, styler, marshal);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngAfterViewInit() {\n    this.trackExtraTriggers();\n\n    const children = Array.from(this.nativeElement.children);\n    for (let i = 0; i < children.length; i++) {\n      if (this.marshal.hasValue(children[i] as HTMLElement, 'flex')) {\n        this.hasFlexChild = true;\n        break;\n      }\n    }\n\n    if (DISPLAY_MAP.has(this.nativeElement)) {\n      this.display = DISPLAY_MAP.get(this.nativeElement)!;\n    } else {\n      this.display = this.getDisplayStyle();\n      DISPLAY_MAP.set(this.nativeElement, this.display);\n    }\n\n    this.init();\n    // set the default to show unless explicitly overridden\n    const defaultValue = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');\n    if (defaultValue === undefined || defaultValue === '') {\n      this.setValue(true, '');\n    } else {\n      this.triggerUpdate();\n    }\n  }\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    Object.keys(changes).forEach(key => {\n      if (this.inputs.indexOf(key) !== -1) {\n        const inputKey = key.split('.');\n        const bp = inputKey.slice(1).join('.');\n        const inputValue = changes[key].currentValue;\n        let shouldShow = inputValue !== '' ?\n            inputValue !== 0 ? coerceBooleanProperty(inputValue) : false\n            : true;\n        if (inputKey[0] === 'fxHide') {\n          shouldShow = !shouldShow;\n        }\n        this.setValue(shouldShow, bp);\n      }\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *  Watch for these extra triggers to update fxShow, fxHide stylings\n   */\n  protected trackExtraTriggers() {\n    this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout');\n\n    ['layout', 'layout-align'].forEach(key => {\n      this.marshal\n          .trackValue(this.nativeElement, key)\n          .pipe(takeUntil(this.destroySubject))\n          .subscribe(this.triggerUpdate.bind(this));\n    });\n  }\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected getDisplayStyle(): string {\n    return (this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)) ?\n        'flex' : this.styler.lookupStyle(this.nativeElement, 'display', true);\n  }\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected updateWithValue(value: boolean | string = true) {\n    if (value === '') {\n      return;\n    }\n    this.addStyles(value ? 'true' : 'false', {display: this.display});\n    if (isPlatformServer(this.platformId) && this.serverModuleLoaded) {\n      this.nativeElement.style.setProperty('display', '');\n    }\n    this.marshal.triggerUpdate(this.parentElement!, 'layout-gap');\n  }\n}\n\nconst DISPLAY_MAP: WeakMap<HTMLElement, string> = new WeakMap();\n\nconst inputs = [\n  'fxShow', 'fxShow.print',\n  'fxShow.xs', 'fxShow.sm', 'fxShow.md', 'fxShow.lg', 'fxShow.xl',\n  'fxShow.lt-sm', 'fxShow.lt-md', 'fxShow.lt-lg', 'fxShow.lt-xl',\n  'fxShow.gt-xs', 'fxShow.gt-sm', 'fxShow.gt-md', 'fxShow.gt-lg',\n  'fxHide', 'fxHide.print',\n  'fxHide.xs', 'fxHide.sm', 'fxHide.md', 'fxHide.lg', 'fxHide.xl',\n  'fxHide.lt-sm', 'fxHide.lt-md', 'fxHide.lt-lg', 'fxHide.lt-xl',\n  'fxHide.gt-xs', 'fxHide.gt-sm', 'fxHide.gt-md', 'fxHide.gt-lg'\n];\n\nconst selector = `\n  [fxShow], [fxShow.print],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide], [fxHide.print],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`;\n\n/**\n * 'show' Layout API directive\n */\n@Directive({selector, inputs})\nexport class DefaultShowHideDirective extends ShowHideDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/** NgStyle allowed inputs */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\nexport function getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nexport function buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/** Convert array of key:value strings to a iterable map object */\nexport function buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n\n/** Convert Set<string> or raw Object to an iterable NgStyleMap */\nexport function buildMapFromSet(source: NgStyleType, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list: string[] = [];\n  if (getType(source) === 'set') {\n    (source as Set<string>).forEach(entry => list.push(entry));\n  } else {\n    Object.keys(source).forEach((key: string) => {\n      list.push(`${key}:${(source as NgStyleMap)[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/** Convert 'key:value' -> [key, value] */\nexport function stringToKeyValue(it: string): NgStyleKeyValue {\n  const [key, ...vals] = it.split(':');\n  return new NgStyleKeyValue(key, vals.join(':'));\n}\n\n/** Convert [ [key,value] ] -> { key : value } */\nexport function keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  KeyValueDiffers,\n  Optional,\n  PLATFORM_ID,\n  Renderer2,\n  SecurityContext,\n  Self,\n} from '@angular/core';\nimport {isPlatformServer, NgStyle} from '@angular/common';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  buildRawList,\n  getType,\n  buildMapFromSet,\n  NgStyleMap,\n  NgStyleKeyValue,\n  stringToKeyValue,\n  keyValuesToMap,\n} from './style-transforms';\n\n@Directive()\nexport class StyleDirective extends BaseDirective2 implements DoCheck {\n\n  protected DIRECTIVE_KEY = 'ngStyle';\n  protected fallbackStyles: NgStyleMap;\n  protected isServer: boolean;\n\n  constructor(elementRef: ElementRef,\n              styler: StyleUtils,\n              marshal: MediaMarshaller,\n              protected sanitizer: DomSanitizer,\n              differs: KeyValueDiffers,\n              renderer2: Renderer2,\n              @Optional() @Self() private readonly ngStyleInstance: NgStyle,\n              @Inject(SERVER_TOKEN) serverLoaded: boolean,\n              @Inject(PLATFORM_ID) platformId: Object) {\n    super(elementRef, null!, styler, marshal);\n    if (!this.ngStyleInstance) {\n      // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been\n      // defined on the same host element; since the responsive variations may be defined...\n      this.ngStyleInstance = new NgStyle(elementRef, differs, renderer2);\n    }\n    this.init();\n    const styles = this.nativeElement.getAttribute('style') || '';\n    this.fallbackStyles = this.buildStyleMap(styles);\n    this.isServer = serverLoaded && isPlatformServer(platformId);\n  }\n\n  /** Add generated styles */\n  protected updateWithValue(value: any) {\n    const styles = this.buildStyleMap(value);\n    this.ngStyleInstance.ngStyle = {...this.fallbackStyles, ...styles};\n    if (this.isServer) {\n      this.applyStyleToElement(styles);\n    }\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /** Remove generated styles */\n  protected clearStyles() {\n    this.ngStyleInstance.ngStyle = this.fallbackStyles;\n    this.ngStyleInstance.ngDoCheck();\n  }\n\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected buildStyleMap(styles: NgStyleType): NgStyleMap {\n    // Always safe-guard (aka sanitize) style property values\n    const sanitizer: NgStyleSanitizer = (val: any) =>\n      this.sanitizer.sanitize(SecurityContext.STYLE, val) || '';\n    if (styles) {\n      switch (getType(styles)) {\n        case 'string':  return buildMapFromList(buildRawList(styles),\n          sanitizer);\n        case 'array' :  return buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return buildMapFromSet(styles, sanitizer);\n        default      :  return buildMapFromSet(styles, sanitizer);\n      }\n    }\n\n    return {};\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /** For ChangeDetectionStrategy.onPush and ngOnChanges() updates */\n  ngDoCheck() {\n    this.ngStyleInstance.ngDoCheck();\n  }\n}\n\nconst inputs = [\n  'ngStyle',\n  'ngStyle.xs', 'ngStyle.sm', 'ngStyle.md', 'ngStyle.lg', 'ngStyle.xl',\n  'ngStyle.lt-sm', 'ngStyle.lt-md', 'ngStyle.lt-lg', 'ngStyle.lt-xl',\n  'ngStyle.gt-xs', 'ngStyle.gt-sm', 'ngStyle.gt-md', 'ngStyle.gt-lg'\n];\n\nconst selector = `\n  [ngStyle],\n  [ngStyle.xs], [ngStyle.sm], [ngStyle.md], [ngStyle.lg], [ngStyle.xl],\n  [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n  [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n`;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({selector, inputs})\nexport class DefaultStyleDirective extends StyleDirective implements DoCheck {\n  protected inputs = inputs;\n}\n\n/** Build a styles map from a list of styles, while sanitizing bad values first */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  const sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n    .map(stringToKeyValue)\n    .filter(entry => !!entry)\n    .map(sanitizeValue)\n    .reduce(keyValuesToMap, {} as NgStyleMap);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultImgSrcDirective} from './img-src/img-src';\nimport {DefaultClassDirective} from './class/class';\nimport {DefaultShowHideDirective} from './show-hide/show-hide';\nimport {DefaultStyleDirective} from './style/style';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultShowHideDirective,\n  DefaultClassDirective,\n  DefaultStyleDirective,\n  DefaultImgSrcDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the Extended API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class ExtendedModule {\n}\n"]}