{"version":3,"file":"grid.js","sources":["../../../src/lib/grid/grid-align/grid-align.ts","../../../src/lib/grid/align-columns/align-columns.ts","../../../src/lib/grid/align-rows/align-rows.ts","../../../src/lib/grid/area/area.ts","../../../src/lib/grid/areas/areas.ts","../../../src/lib/grid/auto/auto.ts","../../../src/lib/grid/column/column.ts","../../../src/lib/grid/columns/columns.ts","../../../src/lib/grid/gap/gap.ts","../../../src/lib/grid/row/row.ts","../../../src/lib/grid/rows/rows.ts","../../../src/lib/grid/module.ts"],"names":["buildCss","inputs","selector","DEFAULT_MAIN","DEFAULT_CROSS","DEFAULT_VALUE","AUTO_SPECIFIER"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\n\nconst ROW_DEFAULT = 'stretch';\nconst COL_DEFAULT = 'stretch';\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return buildCss(input || ROW_DEFAULT);\n  }\n}\n\n@Directive()\nexport class GridAlignDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = alignCache;\n}\n\nconst alignCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGridAlign',\n  'gdGridAlign.xs', 'gdGridAlign.sm', 'gdGridAlign.md', 'gdGridAlign.lg', 'gdGridAlign.xl',\n  'gdGridAlign.lt-sm', 'gdGridAlign.lt-md', 'gdGridAlign.lt-lg', 'gdGridAlign.lt-xl',\n  'gdGridAlign.gt-xs', 'gdGridAlign.gt-sm', 'gdGridAlign.gt-md', 'gdGridAlign.gt-lg'\n];\n\nconst selector = `\n  [gdGridAlign],\n  [gdGridAlign.xs], [gdGridAlign.sm], [gdGridAlign.md], [gdGridAlign.lg],[gdGridAlign.xl],\n  [gdGridAlign.lt-sm], [gdGridAlign.lt-md], [gdGridAlign.lt-lg], [gdGridAlign.lt-xl],\n  [gdGridAlign.gt-xs], [gdGridAlign.gt-sm], [gdGridAlign.gt-md], [gdGridAlign.gt-lg]\n`;\n\n/**\n * 'align' CSS Grid styling directive for grid children\n *  Defines positioning of child elements along row and column axis in a grid container\n *  Optional values: {row-axis} values or {row-axis column-axis} value pairs\n *\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-justify-self\n *  @see https://css-tricks.com/snippets/css/complete-guide-grid/#prop-align-self\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignDirective extends GridAlignDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string = '') {\n  const css: {[key: string]: string} = {}, [rowAxis, columnAxis] = align.split(' ');\n\n  // Row axis\n  switch (rowAxis) {\n    case 'end':\n      css['justify-self'] = 'end';\n      break;\n    case 'center':\n      css['justify-self'] = 'center';\n      break;\n    case 'stretch':\n      css['justify-self'] = 'stretch';\n      break;\n    case 'start':\n      css['justify-self'] = 'start';\n      break;\n    default:\n      css['justify-self'] = ROW_DEFAULT;  // default row axis\n      break;\n  }\n\n  // Column axis\n  switch (columnAxis) {\n    case 'end':\n      css['align-self'] = 'end';\n      break;\n    case 'center':\n      css['align-self'] = 'center';\n      break;\n    case 'stretch':\n      css['align-self'] = 'stretch';\n      break;\n    case 'start':\n      css['align-self'] = 'start';\n      break;\n    default:\n      css['align-self'] = COL_DEFAULT;  // default column axis\n      break;\n  }\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignColumnsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignColumnsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignColumnsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignColumnsInlineCache : alignColumnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignColumnsCache: Map<string, StyleDefinition> = new Map();\nconst alignColumnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignColumns',\n  'gdAlignColumns.xs', 'gdAlignColumns.sm', 'gdAlignColumns.md',\n  'gdAlignColumns.lg', 'gdAlignColumns.xl', 'gdAlignColumns.lt-sm',\n  'gdAlignColumns.lt-md', 'gdAlignColumns.lt-lg', 'gdAlignColumns.lt-xl',\n  'gdAlignColumns.gt-xs', 'gdAlignColumns.gt-sm', 'gdAlignColumns.gt-md',\n  'gdAlignColumns.gt-lg'\n];\nconst selector = `\n  [gdAlignColumns],\n  [gdAlignColumns.xs], [gdAlignColumns.sm], [gdAlignColumns.md],\n  [gdAlignColumns.lg], [gdAlignColumns.xl], [gdAlignColumns.lt-sm],\n  [gdAlignColumns.lt-md], [gdAlignColumns.lt-lg], [gdAlignColumns.lt-xl],\n  [gdAlignColumns.gt-xs], [gdAlignColumns.gt-sm], [gdAlignColumns.gt-md],\n  [gdAlignColumns.gt-lg]\n`;\n\n/**\n * 'column alignment' CSS Grid styling directive\n * Configures the alignment in the column direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-19\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-21\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignColumnsDirective extends GridAlignColumnsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n      css['align-content'] = 'center';\n      break;\n    case 'space-around':\n      css['align-content'] = 'space-around';\n      break;\n    case 'space-between':\n      css['align-content'] = 'space-between';\n      break;\n    case 'space-evenly':\n      css['align-content'] = 'space-evenly';\n      break;\n    case 'end':\n      css['align-content'] = 'end';\n      break;\n    case 'start':\n      css['align-content'] = 'start';\n      break;\n    case 'stretch':\n      css['align-content'] = 'stretch';\n      break;\n    default:\n      css['align-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n      css['align-items'] = 'start';\n      break;\n    case 'center':\n      css['align-items'] = 'center';\n      break;\n    case 'end':\n      css['align-items'] = 'end';\n      break;\n    case 'stretch':\n      css['align-items'] = 'stretch';\n      break;\n    default : // 'stretch'\n      css['align-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  StyleDefinition,\n  MediaMarshaller,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_MAIN = 'start';\nconst DEFAULT_CROSS = 'stretch';\n\nexport interface GridAlignRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAlignRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAlignRowsParent) {\n    return buildCss(input || `${DEFAULT_MAIN} ${DEFAULT_CROSS}`, parent.inline);\n  }\n}\n\n@Directive()\nexport class GridAlignRowsDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-align-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAlignRowsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? alignRowsInlineCache : alignRowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst alignRowsCache: Map<string, StyleDefinition> = new Map();\nconst alignRowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAlignRows',\n  'gdAlignRows.xs', 'gdAlignRows.sm', 'gdAlignRows.md',\n  'gdAlignRows.lg', 'gdAlignRows.xl', 'gdAlignRows.lt-sm',\n  'gdAlignRows.lt-md', 'gdAlignRows.lt-lg', 'gdAlignRows.lt-xl',\n  'gdAlignRows.gt-xs', 'gdAlignRows.gt-sm', 'gdAlignRows.gt-md',\n  'gdAlignRows.gt-lg'\n];\nconst selector = `\n  [gdAlignRows],\n  [gdAlignRows.xs], [gdAlignRows.sm], [gdAlignRows.md],\n  [gdAlignRows.lg], [gdAlignRows.xl], [gdAlignRows.lt-sm],\n  [gdAlignRows.lt-md], [gdAlignRows.lt-lg], [gdAlignRows.lt-xl],\n  [gdAlignRows.gt-xs], [gdAlignRows.gt-sm], [gdAlignRows.gt-md],\n  [gdAlignRows.gt-lg]\n`;\n\n/**\n * 'row alignment' CSS Grid styling directive\n * Configures the alignment in the row direction\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-18\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-20\n */\n@Directive({selector, inputs})\nexport class DefaultGridAlignRowsDirective extends GridAlignRowsDirective {\n  protected inputs = inputs;\n}\n\nfunction buildCss(align: string, inline: boolean): StyleDefinition {\n  const css: {[key: string]: string} = {}, [mainAxis, crossAxis] = align.split(' ');\n\n  // Main axis\n  switch (mainAxis) {\n    case 'center':\n    case 'space-around':\n    case 'space-between':\n    case 'space-evenly':\n    case 'end':\n    case 'start':\n    case 'stretch':\n      css['justify-content'] = mainAxis;\n      break;\n    default:\n      css['justify-content'] = DEFAULT_MAIN;  // default main axis\n      break;\n  }\n\n  // Cross-axis\n  switch (crossAxis) {\n    case 'start':\n    case 'center':\n    case 'end':\n    case 'stretch':\n      css['justify-items'] = crossAxis;\n      break;\n    default : // 'stretch'\n      css['justify-items'] = DEFAULT_CROSS;   // default cross axis\n      break;\n  }\n\n  css['display'] = inline ? 'inline-grid' : 'grid';\n\n  return css;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridAreaStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-area': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridAreaDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-area';\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridAreaStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  protected styleCache = gridAreaCache;\n}\n\nconst gridAreaCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdArea',\n  'gdArea.xs', 'gdArea.sm', 'gdArea.md', 'gdArea.lg', 'gdArea.xl',\n  'gdArea.lt-sm', 'gdArea.lt-md', 'gdArea.lt-lg', 'gdArea.lt-xl',\n  'gdArea.gt-xs', 'gdArea.gt-sm', 'gdArea.gt-md', 'gdArea.gt-lg'\n];\nconst selector = `\n  [gdArea],\n  [gdArea.xs], [gdArea.sm], [gdArea.md], [gdArea.lg], [gdArea.xl],\n  [gdArea.lt-sm], [gdArea.lt-md], [gdArea.lt-lg], [gdArea.lt-xl],\n  [gdArea.gt-xs], [gdArea.gt-sm], [gdArea.gt-md], [gdArea.gt-lg]\n`;\n\n/**\n * 'grid-area' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-27\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreaDirective extends GridAreaDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable, Input} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst DELIMETER = '|';\n\nexport interface GridAreasParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAreasStyleBuiler extends StyleBuilder {\n  buildStyles(input: string, parent: GridAreasParent) {\n    const areas = (input || DEFAULT_VALUE).split(DELIMETER).map(v => `\"${v.trim()}\"`);\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-template-areas': areas.join(' ')\n    };\n  }\n}\n\n@Directive()\nexport class GridAreasDirective extends BaseDirective2 {\n\n  protected DIRECTIVE_KEY = 'grid-areas';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridAreasStyleBuiler,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? areasInlineCache : areasCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst areasCache: Map<string, StyleDefinition> = new Map();\nconst areasInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAreas',\n  'gdAreas.xs', 'gdAreas.sm', 'gdAreas.md', 'gdAreas.lg', 'gdAreas.xl',\n  'gdAreas.lt-sm', 'gdAreas.lt-md', 'gdAreas.lt-lg', 'gdAreas.lt-xl',\n  'gdAreas.gt-xs', 'gdAreas.gt-sm', 'gdAreas.gt-md', 'gdAreas.gt-lg'\n];\n\nconst selector = `\n  [gdAreas],\n  [gdAreas.xs], [gdAreas.sm], [gdAreas.md], [gdAreas.lg], [gdAreas.xl],\n  [gdAreas.lt-sm], [gdAreas.lt-md], [gdAreas.lt-lg], [gdAreas.lt-xl],\n  [gdAreas.gt-xs], [gdAreas.gt-sm], [gdAreas.gt-md], [gdAreas.gt-lg]\n`;\n\n/**\n * 'grid-template-areas' CSS Grid styling directive\n * Configures the names of elements within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-14\n */\n@Directive({selector, inputs})\nexport class DefaultGridAreasDirective extends GridAreasDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  StyleBuilder,\n  MediaMarshaller,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'initial';\n\nexport interface GridAutoParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridAutoStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridAutoParent) {\n    let [direction, dense] = (input || DEFAULT_VALUE).split(' ');\n    if (direction !== 'column' && direction !== 'row' && direction !== 'dense') {\n      direction = 'row';\n    }\n\n    dense = (dense === 'dense' && direction !== 'dense') ? ' dense' : '';\n\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-flow': direction + dense\n    };\n  }\n}\n\n@Directive()\nexport class GridAutoDirective extends BaseDirective2 {\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  protected DIRECTIVE_KEY = 'grid-auto';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridAutoStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? autoInlineCache : autoCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst autoCache: Map<string, StyleDefinition> = new Map();\nconst autoInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdAuto',\n  'gdAuto.xs', 'gdAuto.sm', 'gdAuto.md', 'gdAuto.lg', 'gdAuto.xl',\n  'gdAuto.lt-sm', 'gdAuto.lt-md', 'gdAuto.lt-lg', 'gdAuto.lt-xl',\n  'gdAuto.gt-xs', 'gdAuto.gt-sm', 'gdAuto.gt-md', 'gdAuto.gt-lg'\n];\nconst selector = `\n  [gdAuto],\n  [gdAuto.xs], [gdAuto.sm], [gdAuto.md], [gdAuto.lg], [gdAuto.xl],\n  [gdAuto.lt-sm], [gdAuto.lt-md], [gdAuto.lt-lg], [gdAuto.lt-xl],\n  [gdAuto.gt-xs], [gdAuto.gt-sm], [gdAuto.gt-md], [gdAuto.gt-lg]\n`;\n\n/**\n * 'grid-auto-flow' CSS Grid styling directive\n * Configures the auto placement algorithm for the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-23\n */\n@Directive({selector, inputs})\nexport class DefaultGridAutoDirective extends GridAutoDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-column': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridColumnDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-column';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridColumnStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = columnCache;\n}\n\nconst columnCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumn',\n  'gdColumn.xs', 'gdColumn.sm', 'gdColumn.md', 'gdColumn.lg', 'gdColumn.xl',\n  'gdColumn.lt-sm', 'gdColumn.lt-md', 'gdColumn.lt-lg', 'gdColumn.lt-xl',\n  'gdColumn.gt-xs', 'gdColumn.gt-sm', 'gdColumn.gt-md', 'gdColumn.gt-lg'\n];\n\nconst selector = `\n  [gdColumn],\n  [gdColumn.xs], [gdColumn.sm], [gdColumn.md], [gdColumn.lg], [gdColumn.xl],\n  [gdColumn.lt-sm], [gdColumn.lt-md], [gdColumn.lt-lg], [gdColumn.lt-xl],\n  [gdColumn.gt-xs], [gdColumn.gt-sm], [gdColumn.gt-md], [gdColumn.gt-lg]\n`;\n\n/**\n * 'grid-column' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnDirective extends GridColumnDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridColumnsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridColumnsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridColumnsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-columns': '',\n      'grid-template-columns': '',\n    };\n    const key = (auto ? 'grid-auto-columns' : 'grid-template-columns');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridColumnsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-columns';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridColumnsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? columnsInlineCache : columnsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst columnsCache: Map<string, StyleDefinition> = new Map();\nconst columnsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdColumns',\n  'gdColumns.xs', 'gdColumns.sm', 'gdColumns.md', 'gdColumns.lg', 'gdColumns.xl',\n  'gdColumns.lt-sm', 'gdColumns.lt-md', 'gdColumns.lt-lg', 'gdColumns.lt-xl',\n  'gdColumns.gt-xs', 'gdColumns.gt-sm', 'gdColumns.gt-md', 'gdColumns.gt-lg'\n];\n\nconst selector = `\n  [gdColumns],\n  [gdColumns.xs], [gdColumns.sm], [gdColumns.md], [gdColumns.lg], [gdColumns.xl],\n  [gdColumns.lt-sm], [gdColumns.lt-md], [gdColumns.lt-lg], [gdColumns.lt-xl],\n  [gdColumns.gt-xs], [gdColumns.gt-sm], [gdColumns.gt-md], [gdColumns.gt-lg]\n`;\n\n/**\n * 'grid-template-columns' CSS Grid styling directive\n * Configures the sizing for the columns in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridColumnsDirective extends GridColumnsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = '0';\n\nexport interface GridGapParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridGapStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridGapParent) {\n    return {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-gap': input || DEFAULT_VALUE\n    };\n  }\n}\n\n@Directive()\nexport class GridGapDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-gap';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elRef: ElementRef,\n              styleUtils: StyleUtils,\n              styleBuilder: GridGapStyleBuilder,\n              marshal: MediaMarshaller) {\n    super(elRef, styleBuilder, styleUtils, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? gapInlineCache : gapCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst gapCache: Map<string, StyleDefinition> = new Map();\nconst gapInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdGap',\n  'gdGap.xs', 'gdGap.sm', 'gdGap.md', 'gdGap.lg', 'gdGap.xl',\n  'gdGap.lt-sm', 'gdGap.lt-md', 'gdGap.lt-lg', 'gdGap.lt-xl',\n  'gdGap.gt-xs', 'gdGap.gt-sm', 'gdGap.gt-md', 'gdGap.gt-lg'\n];\n\nconst selector = `\n  [gdGap],\n  [gdGap.xs], [gdGap.sm], [gdGap.md], [gdGap.lg], [gdGap.xl],\n  [gdGap.lt-sm], [gdGap.lt-md], [gdGap.lt-lg], [gdGap.lt-xl],\n  [gdGap.gt-xs], [gdGap.gt-sm], [gdGap.gt-md], [gdGap.gt-lg]\n`;\n\n/**\n * 'grid-gap' CSS Grid styling directive\n * Configures the gap between items in the grid\n * Syntax: <row gap> [<column-gap>]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-17\n */\n@Directive({selector, inputs})\nexport class DefaultGridGapDirective extends GridGapDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Injectable} from '@angular/core';\nimport {\n  BaseDirective2,\n  StyleUtils,\n  MediaMarshaller,\n  StyleBuilder,\n  StyleDefinition,\n} from '@angular/flex-layout/core';\n\nconst DEFAULT_VALUE = 'auto';\n\n@Injectable({providedIn: 'root'})\nexport class GridRowStyleBuilder extends StyleBuilder {\n  buildStyles(input: string) {\n    return {'grid-row': input || DEFAULT_VALUE};\n  }\n}\n\n@Directive()\nexport class GridRowDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-row';\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridRowStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  protected styleCache = rowCache;\n}\n\nconst rowCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRow',\n  'gdRow.xs', 'gdRow.sm', 'gdRow.md', 'gdRow.lg', 'gdRow.xl',\n  'gdRow.lt-sm', 'gdRow.lt-md', 'gdRow.lt-lg', 'gdRow.lt-xl',\n  'gdRow.gt-xs', 'gdRow.gt-sm', 'gdRow.gt-md', 'gdRow.gt-lg'\n];\n\nconst selector = `\n  [gdRow],\n  [gdRow.xs], [gdRow.sm], [gdRow.md], [gdRow.lg], [gdRow.xl],\n  [gdRow.lt-sm], [gdRow.lt-md], [gdRow.lt-lg], [gdRow.lt-xl],\n  [gdRow.gt-xs], [gdRow.gt-sm], [gdRow.gt-md], [gdRow.gt-lg]\n`;\n\n/**\n * 'grid-row' CSS Grid styling directive\n * Configures the name or position of an element within the grid\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-26\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowDirective extends GridRowDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Input, Injectable} from '@angular/core';\nimport {\n  MediaMarshaller,\n  BaseDirective2,\n  StyleBuilder,\n  StyleDefinition,\n  StyleUtils,\n} from '@angular/flex-layout/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\nconst DEFAULT_VALUE = 'none';\nconst AUTO_SPECIFIER = '!';\n\nexport interface GridRowsParent {\n  inline: boolean;\n}\n\n@Injectable({providedIn: 'root'})\nexport class GridRowsStyleBuilder extends StyleBuilder {\n  buildStyles(input: string, parent: GridRowsParent) {\n    input = input || DEFAULT_VALUE;\n    let auto = false;\n    if (input.endsWith(AUTO_SPECIFIER)) {\n      input = input.substring(0, input.indexOf(AUTO_SPECIFIER));\n      auto = true;\n    }\n\n    const css = {\n      'display': parent.inline ? 'inline-grid' : 'grid',\n      'grid-auto-rows': '',\n      'grid-template-rows': '',\n    };\n    const key = (auto ? 'grid-auto-rows' : 'grid-template-rows');\n    css[key] = input;\n\n    return css;\n  }\n}\n\n@Directive()\nexport class GridRowsDirective extends BaseDirective2 {\n  protected DIRECTIVE_KEY = 'grid-rows';\n\n  @Input('gdInline')\n  get inline(): boolean { return this._inline; }\n  set inline(val: boolean) { this._inline = coerceBooleanProperty(val); }\n  protected _inline = false;\n\n  constructor(elementRef: ElementRef,\n              styleBuilder: GridRowsStyleBuilder,\n              styler: StyleUtils,\n              marshal: MediaMarshaller) {\n    super(elementRef, styleBuilder, styler, marshal);\n    this.init();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected updateWithValue(value: string) {\n    this.styleCache = this.inline ? rowsInlineCache : rowsCache;\n    this.addStyles(value, {inline: this.inline});\n  }\n}\n\nconst rowsCache: Map<string, StyleDefinition> = new Map();\nconst rowsInlineCache: Map<string, StyleDefinition> = new Map();\n\nconst inputs = [\n  'gdRows',\n  'gdRows.xs', 'gdRows.sm', 'gdRows.md', 'gdRows.lg', 'gdRows.xl',\n  'gdRows.lt-sm', 'gdRows.lt-md', 'gdRows.lt-lg', 'gdRows.lt-xl',\n  'gdRows.gt-xs', 'gdRows.gt-sm', 'gdRows.gt-md', 'gdRows.gt-lg'\n];\n\nconst selector = `\n  [gdRows],\n  [gdRows.xs], [gdRows.sm], [gdRows.md], [gdRows.lg], [gdRows.xl],\n  [gdRows.lt-sm], [gdRows.lt-md], [gdRows.lt-lg], [gdRows.lt-xl],\n  [gdRows.gt-xs], [gdRows.gt-sm], [gdRows.gt-md], [gdRows.gt-lg]\n`;\n\n/**\n * 'grid-template-rows' CSS Grid styling directive\n * Configures the sizing for the rows in the grid\n * Syntax: <column value> [auto]\n * @see https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\n */\n@Directive({selector, inputs})\nexport class DefaultGridRowsDirective extends GridRowsDirective {\n  protected inputs = inputs;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from '@angular/flex-layout/core';\n\nimport {DefaultGridAlignDirective} from './grid-align/grid-align';\nimport {DefaultGridAlignColumnsDirective} from './align-columns/align-columns';\nimport {DefaultGridAlignRowsDirective} from './align-rows/align-rows';\nimport {DefaultGridAreaDirective} from './area/area';\nimport {DefaultGridAreasDirective} from './areas/areas';\nimport {DefaultGridAutoDirective} from './auto/auto';\nimport {DefaultGridColumnDirective} from './column/column';\nimport {DefaultGridColumnsDirective} from './columns/columns';\nimport {DefaultGridGapDirective} from './gap/gap';\nimport {DefaultGridRowDirective} from './row/row';\nimport {DefaultGridRowsDirective} from './rows/rows';\n\n\nconst ALL_DIRECTIVES = [\n  DefaultGridAlignDirective,\n  DefaultGridAlignColumnsDirective,\n  DefaultGridAlignRowsDirective,\n  DefaultGridAreaDirective,\n  DefaultGridAreasDirective,\n  DefaultGridAutoDirective,\n  DefaultGridColumnDirective,\n  DefaultGridColumnsDirective,\n  DefaultGridGapDirective,\n  DefaultGridRowDirective,\n  DefaultGridRowsDirective,\n];\n\n/**\n * *****************************************************************\n * Define module for the CSS Grid API\n * *****************************************************************\n */\n\n@NgModule({\n  imports: [CoreModule],\n  declarations: [...ALL_DIRECTIVES],\n  exports: [...ALL_DIRECTIVES]\n})\nexport class GridModule {\n}\n"]}