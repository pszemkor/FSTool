{"version":3,"file":"platform.js","sources":["../../../../../../src/cdk/platform/platform.ts","../../../../../../src/cdk/platform/platform-module.ts","../../../../../../src/cdk/platform/features/input-types.ts","../../../../../../src/cdk/platform/features/passive-listeners.ts","../../../../../../src/cdk/platform/features/scrolling.ts","../../../../../../src/cdk/platform/features/shadow-dom.ts","../../../../../../src/cdk/platform/index.ts"],"names":[],"mappings":";;;;;;;;;;;;IAaI,kBAA2B;AAC/B;AAC6F;AACC;AACzC;AACC;AAEtD,IAAI;AACJ,IAAE,kBAAkB,IAAI,OAAO,IAAI,KAAK,WAAW,IAAI,oBAAC,IAAI,IAAS,eAAe,CAAC,CAAC;AACtF,CAAC;AAAC,WAAM;AACR,IAAE,kBAAkB,GAAG,KAAK,CAAC;AAC7B,CAAC;AACD;AACG;AAC6E;AACjC;AAG/C,MAAa,QAAQ;AACrB;AAAQ;AAAyD;AACnD;AAAQ,IA+CpB,YAAqD,WAAoB;AAAI,QAAxB,gBAAW,GAAX,WAAW,CAAS;AAAC;AAEM;AAA4F;AAA2F;AAAY;AAA6E;AAAY,QA9C5W,cAAS,GAAY,IAAI,CAAC,WAAW;AACvC,YAAM,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,CAAC,QAAQ,CAAC;AACvF;AACW;AACE;AAAY,QAAvB,SAAI,GAAY,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACxE;AACW;AACE;AAAY,QAAvB,YAAO,GAAY,IAAI,CAAC,SAAS,IAAI,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACnF;AAEK;AAAY;AACE;AAAY,QAA7B,UAAK,GAAY,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE,oBAAC,MAAM,IAAS,MAAM,IAAI,kBAAkB,CAAC;AACtF,YAAM,OAAO,GAAG,KAAK,WAAW,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACjE;AAEK;AACM;AAAY;AACE;AAAY,QAAnC,WAAM,GAAY,IAAI,CAAC,SAAS;AAClC,YAAM,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AAC7F;AACW;AACE;AAAY,QAAvB,QAAG,GAAY,IAAI,CAAC,SAAS,IAAI,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;AAC/E,YAAM,EAAE,UAAU,IAAI,MAAM,CAAC,CAAC;AAC9B;AAEK;AACM;AACM;AACM;AAAY;AACE;AAAY,QAA/C,YAAO,GAAY,IAAI,CAAC,SAAS,IAAI,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AACxF;AACW;AACE;AAAY;AACM,QAA7B,YAAO,GAAY,IAAI,CAAC,SAAS,IAAI,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;AAC7F;AAEK;AACM;AACM;AAAY;AACE;AAAY,QAAzC,WAAM,GAAY,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC;AACzF,KAI+E;AAC/E;oCAnDC,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC,iCAC3B;AAAC;AACL;AAAkC,YAgDkC,MAAM,uBAA5D,QAAQ,YAAI,MAAM,SAAC,WAAW;AAAQ;AAAG;;;;;;;;;kCAEuG;AAAC;AAAa;AAAQ;AAAyE;AAAiB;AAAQ,IA9CrR,6BACqF;AACvF;AACO;AACF;AAAiB;AAAQ,IAA5B,wBAAsE;AACxE;AACO;AACF;AAAiB;AAAQ,IAA5B,2BAAiF;AACnF;AACO;AAAsD;AAAiB;AAAQ,IAEpF,yBAC+D;AACjE;AACO;AAAuD;AAAiB;AAAQ,IAGrF,0BAC2F;AAC7F;AACO;AACF;AAAiB;AAAQ,IAA5B,uBAC4B;AAC9B;AACO;AAA+C;AAAiB;AAAQ,IAK7E,2BAAsF;AACxF;AACO;AACF;AAAiB;AAAQ,IAC5B,2BAA2F;AAC7F;AACO;AAA8C;AAAiB;AAAQ,IAI5E,0BAAuF;AACzF;AAEC;AAAiB;AAAgB;AAAQ,IAE5B,+BAA6D;AAAC;AAAE;AAAC;AAE9E;AAAkC;AAAuD;AAAsI;AAAI,MCtEvN,cAAc;AAAG;0CAD7B,QAAQ,SAAC,EAAE;;;;;0BACP;AAAC;AAAC;AAAI;AACG;AAA4D;AAAsI;AAAI;AAAI;AAAY;AAA6C;AAAG;AAA2E;AAA2D;AAAI;AAAI;AAAoE;AAAa;AAAI,ICJnf,mBAAgC;AACpC;AACG;AAAiD;AACxC;AAAI,MAAV,mBAAmB,GAAG;AAC5B;AACE;AACE;AACE;AACE,IAAN,OAAO;AACT,IAAE,QAAQ;AACV,IAAE,UAAU;AACZ,IAAE,MAAM;AACR,IAAE,gBAAgB;AAClB,IAAE,OAAO;AACT,IAAE,MAAM;AACR,IAAE,QAAQ;AACV,IAAE,OAAO;AACT,IAAE,OAAO;AACT,IAAE,QAAQ;AACV,IAAE,UAAU;AACZ,IAAE,OAAO;AACT,IAAE,OAAO;AACT,IAAE,OAAO;AACT,IAAE,QAAQ;AACV,IAAE,QAAQ;AACV,IAAE,KAAK;AACP,IAAE,MAAM;AACR,IAAE,MAAM;AACR,IAAE,KAAK;AACP,IAAE,MAAM;AACR,CAAC;AACD;AACG;AACD;AAAF,SAAgB,sBAAsB;AAAK;AAC/B,IACV,IAAI,mBAAmB,EAAE;AAC3B,QAAI,OAAO,mBAAmB,CAAC;AAC/B,KAAG;AACH;AAEC;AACE;AACE,IAAH,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,QAAQ,EAAE;AACjD,QAAI,mBAAmB,GAAG,IAAI,GAAG,CAAC,mBAAmB,CAAC,CAAC;AACvD,QAAI,OAAO,mBAAmB,CAAC;AAC/B,KAAG;AACH;AACoB,QAAd,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;AACxD,IAAE,mBAAmB,GAAG,IAAI,GAAG,CAAC,mBAAmB,CAAC,MAAM;AAAM;AAC9C;AAAmB;AAAQ,IADc,KAAK;AAChE,QAAI,gBAAgB,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACjD,QAAI,OAAO,gBAAgB,CAAC,IAAI,KAAK,KAAK,CAAC;AAC3C,KAAG,EAAC,CAAC,CAAC;AACN,IACE,OAAO,mBAAmB,CAAC;AAC7B,CAAC;AACD;AAAC;AAAI;AAAkC;AAAkE;AAAsI;AAAI;AAAI;AAAY;AAA6C;AAAG;AAA2E;AAA2D;AAAI;AAAI;AAAiF;AAAa;AAAI,ICvD/hB,qBAA8B;AAClC;AACG;AACmE;AACS;AAErE;AAAV,SAAgB,6BAA6B;AAAK,IAChD,IAAI,qBAAqB,IAAI,IAAI,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACtE,QAAI,IAAI;AACR,YAAM,MAAM,CAAC,gBAAgB,CAAC,MAAM,qBAAE,IAAI,IAAG,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,SAAS,EAAE;AAClF,gBAAQ,GAAG;AAAO;AACjB;AACS,gBAFG,MAAM,qBAAqB,GAAG,IAAI,CAAA;AAC/C,aAAO,CAAC,CAAC,CAAC;AACV,SAAK;AAAC,gBAAQ;AACd,YAAM,qBAAqB,GAAG,qBAAqB,IAAI,KAAK,CAAC;AAC7D,SAAK;AACL,KAAG;AACH,IACE,OAAO,qBAAqB,CAAC;AAC/B,CAAC;AACD;AACG;AACuE;AACA;AACnD;AAEpB;AACW;AAAd,SAAgB,+BAA+B,CAAC,OAAgC;AAC/E,IACC,OAAO,6BAA6B,EAAE,GAAG,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;AACvE,CAAC;AACD;AAAC;AAAI;AAAkC;AAA0D;AAAsI;AAAI;AAAI;AAAY;AAA6C;AAAG;AAA2E;AAA2D;AAAI;AC9Brb,MAAkB,iBAAiB;AACjC;AACE;AACE;AAEJ;AACF,IADE,MAAM,GAAA;AACR;AACE;AACE;AAEJ;AAAQ,IAAN,OAAO,GAAA;AACT;AACE;AACE;AAEJ;AAAQ,IAAN,QAAQ,GAAA;AACT,EAAA;AACD;AACG;AAAwF;AAC/E;AAAI,IAAZ,iBAA8C;AAClD;AACG;AAAwD;AAC7C;AAAd,SAAgB,sBAAsB;AAAK,IACzC,OAAO,CAAC,EAAE,OAAO,QAAQ,IAAI,QAAQ,IAAI,gBAAgB,IAAI,mBAAA,QAAQ,CAAC,eAAe,GAAE,KAAK,CAAC,CAAC;AAChG,CAAC;AACD;AACG;AACiG;AACxC;AAElD;AAAV,SAAgB,oBAAoB;AAAK;AAC0B,IACjE,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,QAAQ,EAAE;AACjD,QAAI,sBAAgC;AACpC,KAAG;AACH,IACE,IAAI,iBAAiB,IAAI,IAAI,EAAE;AACjC;AACI;AAAyB,cAAnB,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AACzD;AAAyB,cAAf,cAAc,GAAG,eAAe,CAAC,KAAK;AAChD,QAAI,eAAe,CAAC,GAAG,GAAG,KAAK,CAAC;AAChC,QAAI,cAAc,CAAC,MAAM,GAAG,KAAK,CAAC;AAClC,QAAI,cAAc,CAAC,KAAK,GAAG,KAAK,CAAC;AACjC,QAAI,cAAc,CAAC,QAAQ,GAAG,MAAM,CAAC;AACrC,QAAI,cAAc,CAAC,UAAU,GAAG,QAAQ,CAAC;AACzC,QAAI,cAAc,CAAC,aAAa,GAAG,MAAM,CAAC;AAC1C,QAAI,cAAc,CAAC,QAAQ,GAAG,UAAU,CAAC;AACzC;AACwB,cAAd,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AACjD;AAAyB,cAAf,YAAY,GAAG,OAAO,CAAC,KAAK;AACtC,QAAI,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;AAC/B,QAAI,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC;AAChC,QACI,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACzC,QAAI,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;AAC/C,QACI,iBAAiB,kBAA4B;AACjD;AAEG;AACI;AACI,QAAP,IAAI,eAAe,CAAC,UAAU,KAAK,CAAC,EAAE;AAC1C;AACM;AACM;AACM;AACM,YAAlB,eAAe,CAAC,UAAU,GAAG,CAAC,CAAC;AACrC,YAAM,iBAAiB;AACvB,gBAAU,eAAe,CAAC,UAAU,KAAK,CAAC,sCAA0D;AACpG,SAAK;AACL,QACI,mBAAA,eAAe,CAAC,UAAU,GAAE,WAAW,CAAC,eAAe,CAAC,CAAC;AAC7D,KAAG;AACH,IAAE,OAAO,iBAAiB,CAAC;AAC3B,CAAC;AACD;AAAC;AAAI;AAAkC;AAA2D;AAAsI;AAAI;AAAI;AAAY;AAA6C;AAAG;AAA2E;AAA2D;AAAI;AAAiB,IC5Enc,oBAA6B;AACjC;AACG;AAAyD;AAC9C;AAAd,SAAgB,kBAAkB;AAAK,IACrC,IAAI,oBAAoB,IAAI,IAAI,EAAE;AACpC;AAAyB,cAAf,IAAI,GAAG,OAAO,QAAQ,KAAK,WAAW,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI;AACvE,QAAI,oBAAoB,GAAG,CAAC,EAAE,IAAI,KAAK,oBAAC,IAAI,IAAS,gBAAgB,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;AAC7F,KAAG;AACH,IACE,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AACD;AACG;AAA8F;AAC5E;AAAe;AAApC,SAAgB,cAAc,CAAC,OAAoB;AAAI,IACrD,IAAI,kBAAkB,EAAE,EAAE;AAC5B;AAAyB,cAAf,QAAQ,GAAG,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,EAAE,GAAG,IAAI;AACvE;AAEG;AACI,QAAH,IAAI,OAAO,UAAU,KAAK,WAAW,IAAI,UAAU,IAAI,QAAQ,YAAY,UAAU,EAAE;AAC3F,YAAM,OAAO,QAAQ,CAAC;AACtB,SAAK;AACL,KAAG;AACH,IACE,OAAO,IAAI,CAAC;AACd,CAAC;AACD;AAAC;AAAI;AAAkC;AAAkD;AAAsI;AAAI;AClCnO;AACA;AACA,GAAG;AACH;AACA;AACiL","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = (typeof Intl !== 'undefined' && (Intl as any).v8BreakIterator);\n} catch {\n  hasV8BreakIterator = false;\n}\n\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\n@Injectable({providedIn: 'root'})\nexport class Platform {\n  // We want to use the Angular platform check because if the Document is shimmed\n  // without the navigator, the following checks will fail. This is preferred because\n  // sometimes the Document may be shimmed without the user's knowledge or intention\n  /** Whether the Angular application is being rendered in the browser. */\n  isBrowser: boolean = this._platformId ?\n      isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n\n  /** Whether the current browser is Microsoft Edge. */\n  EDGE: boolean = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n\n  /** Whether the current rendering engine is Microsoft Trident. */\n  TRIDENT: boolean = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  /** Whether the current rendering engine is Blink. */\n  BLINK: boolean = this.isBrowser && (!!((window as any).chrome || hasV8BreakIterator) &&\n      typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  /** Whether the current rendering engine is WebKit. */\n  WEBKIT: boolean = this.isBrowser &&\n      /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n\n  /** Whether the current platform is Apple iOS. */\n  IOS: boolean = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n      !('MSStream' in window);\n\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  /** Whether the current browser is Firefox. */\n  FIREFOX: boolean = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n\n  /** Whether the current platform is Android. */\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID: boolean = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n  // Safari browser should also use Webkit as its layout engine.\n  /** Whether the current browser is Safari. */\n  SAFARI: boolean = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n\n  /**\n   * @breaking-change 8.0.0 remove optional decorator\n   */\n  constructor(@Optional() @Inject(PLATFORM_ID) private _platformId?: Object) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\n\n@NgModule({})\nexport class PlatformModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes: Set<string>;\n\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n  // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n  // first changing it to something else:\n  // The specified value \"\" does not conform to the required format.\n  // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n  'color',\n  'button',\n  'checkbox',\n  'date',\n  'datetime-local',\n  'email',\n  'file',\n  'hidden',\n  'image',\n  'month',\n  'number',\n  'password',\n  'radio',\n  'range',\n  'reset',\n  'search',\n  'submit',\n  'tel',\n  'text',\n  'time',\n  'url',\n  'week',\n];\n\n/** @returns The input types supported by this browser. */\nexport function getSupportedInputTypes(): Set<string> {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  }\n\n  // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n\n  let featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n\n  return supportedInputTypes;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents: boolean;\n\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport function supportsPassiveEventListeners(): boolean {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener('test', null!, Object.defineProperty({}, 'passive', {\n        get: () => supportsPassiveEvents = true\n      }));\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n\n  return supportsPassiveEvents;\n}\n\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nexport function normalizePassiveListenerOptions(options: AddEventListenerOptions):\n  AddEventListenerOptions | boolean {\n  return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nexport const enum RtlScrollAxisType {\n  /**\n   * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n   * all the way right.\n   */\n  NORMAL,\n  /**\n   * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  NEGATED,\n  /**\n   * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  INVERTED\n}\n\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType: RtlScrollAxisType|undefined;\n\n/** Check whether the browser supports scroll behaviors. */\nexport function supportsScrollBehavior(): boolean {\n  return !!(typeof document == 'object' && 'scrollBehavior' in document.documentElement!.style);\n}\n\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nexport function getRtlScrollAxisType(): RtlScrollAxisType {\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n  if (typeof document !== 'object' || !document) {\n    return RtlScrollAxisType.NORMAL;\n  }\n\n  if (rtlScrollAxisType == null) {\n    // Create a 1px wide scrolling container and a 2px wide content element.\n    const scrollContainer = document.createElement('div');\n    const containerStyle = scrollContainer.style;\n    scrollContainer.dir = 'rtl';\n    containerStyle.height = '1px';\n    containerStyle.width = '1px';\n    containerStyle.overflow = 'auto';\n    containerStyle.visibility = 'hidden';\n    containerStyle.pointerEvents = 'none';\n    containerStyle.position = 'absolute';\n\n    const content = document.createElement('div');\n    const contentStyle = content.style;\n    contentStyle.width = '2px';\n    contentStyle.height = '1px';\n\n    scrollContainer.appendChild(content);\n    document.body.appendChild(scrollContainer);\n\n    rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n\n    // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n    // dealing with one of the other two types of browsers.\n    if (scrollContainer.scrollLeft === 0) {\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n      // return 0 when we read it again.\n      scrollContainer.scrollLeft = 1;\n      rtlScrollAxisType =\n          scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n    }\n\n    scrollContainer.parentNode!.removeChild(scrollContainer);\n  }\n  return rtlScrollAxisType;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nlet shadowDomIsSupported: boolean;\n\n/** Checks whether the user's browser support Shadow DOM. */\nexport function _supportsShadowDom(): boolean {\n  if (shadowDomIsSupported == null) {\n    const head = typeof document !== 'undefined' ? document.head : null;\n    shadowDomIsSupported = !!(head && ((head as any).createShadowRoot || head.attachShadow));\n  }\n\n  return shadowDomIsSupported;\n}\n\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nexport function _getShadowRoot(element: HTMLElement): Node | null {\n  if (_supportsShadowDom()) {\n    const rootNode = element.getRootNode ? element.getRootNode() : null;\n\n    // Note that this should be caught by `_supportsShadowDom`, but some\n    // teams have been able to hit this code path on unsupported browsers.\n    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n      return rootNode;\n    }\n  }\n\n  return null;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}