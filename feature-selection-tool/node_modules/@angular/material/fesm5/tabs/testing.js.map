{"version":3,"file":"tabs__testing.js","sources":["../../../../../../../src/material/tabs/testing/tab-harness.ts","../../../../../../../src/material/tabs/testing/tab-group-harness.ts","../../../../../../../src/material/tabs/testing/public-api.ts","../../../../../../../src/material/tabs/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessLoader, HarnessPredicate} from '@angular/cdk/testing';\nimport {TabHarnessFilters} from './tab-harness-filters';\n\n/** Harness for interacting with a standard Angular Material tab-label in tests. */\nexport class MatTabHarness extends ComponentHarness {\n  /** The selector for the host element of a `MatTab` instance. */\n  static hostSelector = '.mat-tab-label';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatTabHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which tab instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: TabHarnessFilters = {}): HarnessPredicate<MatTabHarness> {\n    return new HarnessPredicate(MatTabHarness, options)\n        .addOption('label', options.label,\n            (harness, label) => HarnessPredicate.stringMatches(harness.getLabel(), label));\n  }\n\n  /** Gets the label of the tab. */\n  async getLabel(): Promise<string> {\n    return (await this.host()).text();\n  }\n\n  /** Gets the aria-label of the tab. */\n  async getAriaLabel(): Promise<string|null> {\n    return (await this.host()).getAttribute('aria-label');\n  }\n\n  /** Gets the value of the \"aria-labelledby\" attribute. */\n  async getAriaLabelledby(): Promise<string|null> {\n    return (await this.host()).getAttribute('aria-labelledby');\n  }\n\n  /** Whether the tab is selected. */\n  async isSelected(): Promise<boolean> {\n    const hostEl = await this.host();\n    return (await hostEl.getAttribute('aria-selected')) === 'true';\n  }\n\n  /** Whether the tab is disabled. */\n  async isDisabled(): Promise<boolean> {\n    const hostEl = await this.host();\n    return (await hostEl.getAttribute('aria-disabled')) === 'true';\n  }\n\n  /** Selects the given tab by clicking on the label. Tab cannot be selected if disabled. */\n  async select(): Promise<void> {\n    await (await this.host()).click();\n  }\n\n  /** Gets the text content of the tab. */\n  async getTextContent(): Promise<string> {\n    const contentId = await this._getContentId();\n    const contentEl = await this.documentRootLocatorFactory().locatorFor(`#${contentId}`)();\n    return contentEl.text();\n  }\n\n  /**\n   * Gets a `HarnessLoader` that can be used to load harnesses for components within the tab's\n   * content area.\n   */\n  async getHarnessLoaderForContent(): Promise<HarnessLoader> {\n    const contentId = await this._getContentId();\n    return this.documentRootLocatorFactory().harnessLoaderFor(`#${contentId}`);\n  }\n\n  /** Gets the element id for the content of the current tab. */\n  private async _getContentId(): Promise<string> {\n    const hostEl = await this.host();\n    // Tabs never have an empty \"aria-controls\" attribute.\n    return (await hostEl.getAttribute('aria-controls'))!;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {TabGroupHarnessFilters, TabHarnessFilters} from './tab-harness-filters';\nimport {MatTabHarness} from './tab-harness';\n\n/** Harness for interacting with a standard mat-tab-group in tests. */\nexport class MatTabGroupHarness extends ComponentHarness {\n  /** The selector for the host element of a `MatTabGroup` instance. */\n  static hostSelector = '.mat-tab-group';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `MatTabGroupHarness` that meets\n   * certain criteria.\n   * @param options Options for filtering which tab group instances are considered a match.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: TabGroupHarnessFilters = {}): HarnessPredicate<MatTabGroupHarness> {\n    return new HarnessPredicate(MatTabGroupHarness, options)\n        .addOption('selectedTabLabel', options.selectedTabLabel, async (harness, label) => {\n          const selectedTab = await harness.getSelectedTab();\n          return HarnessPredicate.stringMatches(await selectedTab.getLabel(), label);\n        });\n  }\n\n  /**\n   * Gets the list of tabs in the tab group.\n   * @param filter Optionally filters which tabs are included.\n   */\n  async getTabs(filter: TabHarnessFilters = {}): Promise<MatTabHarness[]> {\n    return this.locatorForAll(MatTabHarness.with(filter))();\n  }\n\n  /** Gets the selected tab of the tab group. */\n  async getSelectedTab(): Promise<MatTabHarness> {\n    const tabs = await this.getTabs();\n    const isSelected = await Promise.all(tabs.map(t => t.isSelected()));\n    for (let i = 0; i < tabs.length; i++) {\n      if (isSelected[i]) {\n        return tabs[i];\n      }\n    }\n    throw new Error('No selected tab could be found.');\n  }\n\n  /**\n   * Selects a tab in this tab group.\n   * @param filter An optional filter to apply to the child tabs. The first tab matching the filter\n   *     will be selected.\n   */\n  async selectTab(filter: TabHarnessFilters = {}): Promise<void> {\n    const tabs = await this.getTabs(filter);\n    if (!tabs.length) {\n      throw Error(`Cannot find mat-tab matching filter ${JSON.stringify(filter)}`);\n    }\n    await tabs[0].select();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './tab-group-harness';\nexport * from './tab-harness';\nexport * from './tab-harness-filters';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}