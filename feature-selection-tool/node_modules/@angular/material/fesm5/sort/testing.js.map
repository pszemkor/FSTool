{"version":3,"file":"sort__testing.js","sources":["../../../../../../../src/material/sort/testing/sort-header-harness.ts","../../../../../../../src/material/sort/testing/sort-harness.ts","../../../../../../../src/material/sort/testing/public-api.ts","../../../../../../../src/material/sort/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {SortDirection} from '@angular/material/sort';\nimport {SortHeaderHarnessFilters} from './sort-harness-filters';\n\n/** Harness for interacting with a standard Angular Material sort header in tests. */\nexport class MatSortHeaderHarness extends ComponentHarness {\n  static hostSelector = '.mat-sort-header';\n  private _button = this.locatorFor('.mat-sort-header-button');\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to\n   * search for a sort header with specific attributes.\n   */\n  static with(options: SortHeaderHarnessFilters = {}): HarnessPredicate<MatSortHeaderHarness> {\n    return new HarnessPredicate(MatSortHeaderHarness, options)\n        .addOption('label', options.label,\n            (harness, label) => HarnessPredicate.stringMatches(harness.getLabel(), label))\n        .addOption('sortDirection', options.sortDirection, (harness, sortDirection) => {\n          return HarnessPredicate.stringMatches(harness.getSortDirection(), sortDirection);\n        });\n  }\n\n  /** Gets the label of the sort header. */\n  async getLabel(): Promise<string> {\n    return (await this._button()).text();\n  }\n\n  /** Gets the sorting direction of the header. */\n  async getSortDirection(): Promise<SortDirection> {\n    const host = await this.host();\n    const ariaSort = await host.getAttribute('aria-sort');\n\n    if (ariaSort === 'ascending') {\n      return 'asc';\n    } else if (ariaSort === 'descending') {\n      return 'desc';\n    }\n\n    return '';\n  }\n\n  /** Gets the aria-label of the sort header. */\n  async getAriaLabel(): Promise<string|null> {\n    return (await this._button()).getAttribute('aria-label');\n  }\n\n  /** Gets whether the sort header is currently being sorted by. */\n  async isActive(): Promise<boolean> {\n    return !!(await this.getSortDirection());\n  }\n\n  /** Whether the sort header is disabled. */\n  async isDisabled(): Promise<boolean> {\n    const button = await this._button();\n    return (await button.getAttribute('disabled')) != null;\n  }\n\n  /** Clicks the header to change its sorting direction. Only works if the header is enabled. */\n  async click(): Promise<void> {\n    return (await this.host()).click();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentHarness, HarnessPredicate} from '@angular/cdk/testing';\nimport {SortHarnessFilters, SortHeaderHarnessFilters} from './sort-harness-filters';\nimport {MatSortHeaderHarness} from './sort-header-harness';\n\n/** Harness for interacting with a standard `mat-sort` in tests. */\nexport class MatSortHarness extends ComponentHarness {\n  static hostSelector = '.mat-sort';\n\n  /**\n   * Gets a `HarnessPredicate` that can be used to search for a `mat-sort` with specific attributes.\n   * @param options Options for narrowing the search.\n   * @return a `HarnessPredicate` configured with the given options.\n   */\n  static with(options: SortHarnessFilters = {}): HarnessPredicate<MatSortHarness> {\n    return new HarnessPredicate(MatSortHarness, options);\n  }\n\n  /** Gets all of the sort headers in the `mat-sort`. */\n  async getSortHeaders(filter: SortHeaderHarnessFilters = {}): Promise<MatSortHeaderHarness[]> {\n    return this.locatorForAll(MatSortHeaderHarness.with(filter))();\n  }\n\n  /** Gets the selected header in the `mat-sort`. */\n  async getActiveHeader(): Promise<MatSortHeaderHarness|null> {\n    const headers = await this.getSortHeaders();\n    for (let i = 0; i < headers.length; i++) {\n      if (await headers[i].isActive()) {\n        return headers[i];\n      }\n    }\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './sort-harness';\nexport * from './sort-header-harness';\nexport * from './sort-harness-filters';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}