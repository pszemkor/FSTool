{"version":3,"file":"tabs.js","sources":["../../../../../../src/material/tabs/ink-bar.ts","../../../../../../src/material/tabs/tab-content.ts","../../../../../../src/material/tabs/tab-label.ts","../../../../../../src/material/tabs/tab.ts","../../../../../../src/material/tabs/tabs-animations.ts","../../../../../../src/material/tabs/tab-body.ts","../../../../../../src/material/tabs/tab-config.ts","../../../../../../src/material/tabs/tab-group.ts","../../../../../../src/material/tabs/tab-label-wrapper.ts","../../../../../../src/material/tabs/paginated-tab-header.ts","../../../../../../src/material/tabs/tab-header.ts","../../../../../../src/material/tabs/tab-nav-bar/tab-nav-bar.ts","../../../../../../src/material/tabs/tabs-module.ts","../../../../../../src/material/tabs/index.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone, Optional} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\n// tslint:disable-next-line class-name Using leading underscore to denote internal interface.\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({selector: '[matTabContent]'})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n})\nexport class MatTabLabel extends CdkPortal {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MatTabContent} from './tab-content';\nimport {MatTabLabel} from './tab-label';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {}\nconst _MatTabMixinBase: CanDisableCtor & typeof MatTabBase =\n    mixinDisabled(MatTabBase);\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nexport const MAT_TAB_GROUP = new InjectionToken<any>('MAT_TAB_GROUP');\n\n@Component({\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MatTabLabel)\n  get templateLabel(): MatTabLabel { return this._templateLabel; }\n  set templateLabel(value: MatTabLabel) {\n    // Only update the templateLabel via query if there is actually\n    // a MatTabLabel found. This works around an issue where a user may have\n    // manually set `templateLabel` during creation mode, which would then get clobbered\n    // by `undefined` when this query resolves.\n    if (value) {\n      this._templateLabel = value;\n    }\n  }\n  private _templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MatTabContent, {read: TemplateRef, static: true})\n  _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef, {static: true}) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    @Optional() @Inject(MAT_TAB_GROUP) public _closestTabGroup?: any) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectorRef,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {DOCUMENT} from '@angular/common';\nimport {Subscription, Subject} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith, distinctUntilChanged} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody,\n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    @Inject(DOCUMENT) _document?: any) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n@Directive()\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabBodyBase implements OnInit, OnDestroy {\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  private _positionIndex: number;\n\n  /** Subscription to the directionality change observable. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Tab body position state. Used by the animation trigger for the current state. */\n  _position: MatTabBodyPositionState;\n\n  /** Emits when an animation on the tab is complete. */\n  _translateTabComplete = new Subject<AnimationEvent>();\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  abstract _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** Position that will be used when the tab is immediately becoming visible after creation. */\n  @Input() origin: number | null;\n\n  // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n  // anyway to prevent the animations module from throwing an error if the body is used on its own.\n  /** Duration for the tab's animation. */\n  @Input() animationDuration: string = '500ms';\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe((dir: Direction) => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  private _computePositionAnimationState(dir: Direction = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  private _computePositionFromOrigin(origin: number): MatTabBodyPositionState {\n    const dir = this._getLayoutDirection();\n\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  }\n})\nexport class MatTabBody extends _MatTabBodyBase {\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\n\n  constructor(elementRef: ElementRef<HTMLElement>,\n              @Optional() dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface MatTabsConfig {\n  /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n  animationDuration?: string;\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  disablePagination?: boolean;\n\n  /**\n   * Whether the ink bar should fit its width to the size of the tab label content.\n   * This only applies to the MDC-based tabs.\n   */\n  fitInkBarToContent?: boolean;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MAT_TABS_CONFIG = new InjectionToken<MatTabsConfig>('MAT_TABS_CONFIG');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {merge, Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {MAT_TAB_GROUP, MatTab} from './tab';\nimport {MAT_TABS_CONFIG, MatTabsConfig} from './tab-config';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatTabGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof MatTabGroupMixinBase =\n    mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n\ninterface MatTabGroupBaseHeader {\n  _alignInkBarToSelectedTab: () => void;\n  focusIndex: number;\n}\n\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n@Directive()\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabGroupBase extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n\n  /**\n   * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n   * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n   */\n  abstract _allTabs: QueryList<MatTab>;\n  abstract _tabBodyWrapper: ElementRef;\n  abstract _tabHeader: MatTabGroupBaseHeader;\n\n  /** All of the tabs that belong to the group. */\n  _tabs: QueryList<MatTab> = new QueryList<MatTab>();\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  @Input()\n  get animationDuration(): string { return this._animationDuration; }\n  set animationDuration(value: string) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  private _animationDuration: string;\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  @Input()\n  disablePagination: boolean;\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n        defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n        defaultConfig.disablePagination : false;\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /** Listens to changes in all of the tabs. */\n  private _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes\n      .pipe(startWith(this._allTabs))\n      .subscribe((tabs: QueryList<MatTab>) => {\n        this._tabs.reset(tabs.filter(tab => {\n          // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n          // once it becomes a required parameter in MatTab.\n          return !tab._closestTabGroup || tab._closestTabGroup === this;\n        }));\n        this._tabs.notifyOnChanges();\n      });\n  }\n\n  ngOnDestroy() {\n    this._tabs.destroy();\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabGroupBaseHeader, index: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n\n  static ngAcceptInputType_dynamicHeight: BooleanInput;\n  static ngAcceptInputType_animationDuration: NumberInput;\n  static ngAcceptInputType_selectedIndex: NumberInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  inputs: ['color', 'disableRipple'],\n  providers: [{\n    provide: MAT_TAB_GROUP,\n    useExisting: MatTabGroup\n  }],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupBase {\n  @ContentChildren(MatTab, {descendants: true}) _allTabs: QueryList<MatTab>;\n  @ViewChild('tabBodyWrapper') _tabBodyWrapper: ElementRef;\n  @ViewChild('tabHeader') _tabHeader: MatTabGroupBaseHeader;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {}\nconst _MatTabLabelWrapperMixinBase: CanDisableCtor & typeof MatTabLabelWrapperBase =\n    mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  NgZone,\n  Optional,\n  QueryList,\n  EventEmitter,\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  OnDestroy,\n  Directive,\n  Inject,\n  Input,\n} from '@angular/core';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty, NumberInput} from '@angular/cdk/coercion';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {FocusKeyManager, FocusableOption} from '@angular/cdk/a11y';\nimport {END, ENTER, HOME, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {merge, of as observableOf, Subject, timer, fromEvent} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions =\n    normalizePassiveListenerOptions({passive: true}) as EventListenerOptions;\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n\n/** Item inside a paginated tab header. */\nexport type MatPaginatedTabHeaderItem = FocusableOption & {elementRef: ElementRef};\n\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n@Directive()\nexport abstract class MatPaginatedTabHeader implements AfterContentChecked, AfterContentInit,\n  AfterViewInit, OnDestroy {\n  abstract _items: QueryList<MatPaginatedTabHeaderItem>;\n  abstract _inkBar: {hide: () => void, alignToElement: (element: HTMLElement) => void};\n  abstract _tabListContainer: ElementRef<HTMLElement>;\n  abstract _tabList: ElementRef<HTMLElement>;\n  abstract _nextPaginator: ElementRef<HTMLElement>;\n  abstract _previousPaginator: ElementRef<HTMLElement>;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  protected readonly _destroyed = new Subject<void>();\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatPaginatedTabHeaderItem>;\n\n  /** Cached text content of the header. */\n  private _currentTextContent: string;\n\n  /** Stream that will stop the automated scrolling. */\n  private _stopScrolling = new Subject<void>();\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  @Input()\n  disablePagination: boolean = false;\n\n  /** The index of the active tab. */\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n  private _selectedIndex: number = 0;\n\n  /** Event emitted when the option is selected. */\n  readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when a label is focused. */\n  readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              /**\n               * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n               * parameters to become required.\n               */\n              private _platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave')\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => {\n          this._stopInterval();\n        });\n    });\n  }\n\n  /** Called when the user has selected an item via the keyboard. */\n  protected abstract _itemSelected(event: KeyboardEvent): void;\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n  }\n\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager<MatPaginatedTabHeaderItem>(this._items)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItem(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate the element dimensions.\n      Promise.resolve().then(realign);\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event: KeyboardEvent) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        this._itemSelected(event);\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._items) { return true; }\n\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const scrollDistance = this.scrollDistance;\n    const platform = this._platform;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n    if (platform && (platform.TRIDENT || platform.EDGE)) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(value: number) {\n    this._scrollTo(value);\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction: ScrollDirection) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) {\n      return;\n    }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {offsetLeft, offsetWidth} = selectedLabel.elementRef.nativeElement;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const isEnabled =\n          this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n\n      if (isEnabled !== this._showPaginationControls) {\n        this._changeDetectorRef.markForCheck();\n      }\n\n      this._showPaginationControls = isEnabled;\n    }\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedItem = this._items && this._items.length ?\n        this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction: ScrollDirection, mouseEvent?: MouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    }\n\n    // Avoid overlapping timers.\n    this._stopInterval();\n\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n      .subscribe(() => {\n        const {maxScrollDistance, distance} = this._scrollHeader(direction);\n\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n  }\n\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  private _scrollTo(position: number) {\n    if (this.disablePagination) {\n      return {maxScrollDistance: 0, distance: 0};\n    }\n\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n\n    return {maxScrollDistance, distance: this._scrollDistance};\n  }\n\n  static ngAcceptInputType_selectedIndex: NumberInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n  Input,\n  Inject,\n  Directive,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {Platform} from '@angular/cdk/platform';\nimport {MatPaginatedTabHeader} from './paginated-tab-header';\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n@Directive()\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabHeaderBase extends MatPaginatedTabHeader implements\n  AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected(event: KeyboardEvent) {\n    event.preventDefault();\n  }\n}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['selectedIndex'],\n  outputs: ['selectFocusedIndex', 'indexFocused'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderBase {\n  @ContentChildren(MatTabLabelWrapper, {descendants: false}) _items: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator') _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator') _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {FocusMonitor, FocusableOption} from '@angular/cdk/a11y';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MatInkBar} from '../ink-bar';\nimport {MatPaginatedTabHeader, MatPaginatedTabHeaderItem} from '../paginated-tab-header';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n@Directive()\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabNavBase extends MatPaginatedTabHeader implements AfterContentChecked,\n  AfterContentInit, OnDestroy {\n\n  /** Query list of all tab links of the tab navigation. */\n  abstract _items: QueryList<MatPaginatedTabHeaderItem & {active: boolean}>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  /** Theme color of the nav bar. */\n  @Input() color: ThemePalette = 'primary';\n\n  constructor(elementRef: ElementRef,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              /**\n               * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n               */\n              @Optional() platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected() {\n    // noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(_element?: ElementRef) {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n}\n\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    'class': 'mat-tab-nav-bar mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n    '[class.mat-accent]': 'color === \"accent\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MatTabNav extends _MatTabNavBase {\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true}) _items: QueryList<MatTabLink>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator') _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator') _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n    @Optional() dir: Directionality,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    viewportRuler: ViewportRuler,\n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    @Optional() platform?: Platform,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {}\nconst _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkMixinBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n\n/** Base class with all of the `MatTabLink` functionality. */\n@Directive()\n// tslint:disable-next-line:class-name\nexport class _MatTabLinkBase extends _MatTabLinkMixinBase implements OnDestroy, CanDisable,\n  CanDisableRipple, HasTabIndex, RippleTarget, FocusableOption {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this.elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      !!this.rippleConfig.disabled;\n  }\n\n  constructor(\n      private _tabNavBar: _MatTabNavBase, public elementRef: ElementRef,\n      @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n      @Attribute('tabindex') tabIndex: string, private _focusMonitor: FocusMonitor,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super();\n\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {enterDuration: 0, exitDuration: 0};\n    }\n\n    _focusMonitor.monitor(elementRef);\n  }\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link mat-focus-indicator',\n    '[attr.aria-current]': 'active ? \"page\" : null',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkBase implements OnDestroy {\n  /** Reference to the RippleRenderer for the tab-link. */\n  private _tabLinkRipple: RippleRenderer;\n\n  constructor(\n    tabNavBar: MatTabNav, elementRef: ElementRef, ngZone: NgZone,\n    platform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n    @Attribute('tabindex') tabIndex: string, focusMonitor: FocusMonitor,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup} from './tab-group';\nimport {MatTabHeader} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n  ],\n})\nexport class MatTabsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {_MAT_INK_BAR_POSITIONER_FACTORY as Éµangular_material_src_material_tabs_tabs_a} from './ink-bar';\nexport {MatPaginatedTabHeader as Éµangular_material_src_material_tabs_tabs_b} from './paginated-tab-header';"]}