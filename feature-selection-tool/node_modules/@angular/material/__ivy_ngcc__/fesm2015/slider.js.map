{"version":3,"file":"slider.js","sources":["../../../../../../src/material/slider/slider.ts","../../../../../../src/material/slider/slider-module.ts","../../../../../../src/material/slider/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  NgZone,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisable,\n  CanDisableCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  mixinColor,\n  mixinDisabled,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {Subscription} from 'rxjs';\n\nconst activeEventOptions = normalizePassiveListenerOptions({passive: false});\n\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nexport const MAT_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatSlider),\n  multi: true\n};\n\n/** A simple change event emitted by the MatSlider component. */\nexport class MatSliderChange {\n  /** The MatSlider that changed. */\n  source: MatSlider;\n\n  /** The new value of the source slider. */\n  value: number | null;\n}\n\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nclass MatSliderBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatSliderMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof MatSliderBase =\n        mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\n@Component({\n  selector: 'mat-slider',\n  exportAs: 'matSlider',\n  providers: [MAT_SLIDER_VALUE_ACCESSOR],\n  host: {\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n    '(keyup)': '_onKeyup()',\n    '(mouseenter)': '_onMouseenter()',\n\n    // On Safari starting to slide temporarily triggers text selection mode which\n    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n    '(selectstart)': '$event.preventDefault()',\n    'class': 'mat-slider mat-focus-indicator',\n    'role': 'slider',\n    '[tabIndex]': 'tabIndex',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuemin]': 'min',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-slider-disabled]': 'disabled',\n    '[class.mat-slider-has-ticks]': 'tickInterval',\n    '[class.mat-slider-horizontal]': '!vertical',\n    '[class.mat-slider-axis-inverted]': '_invertAxis',\n    // Class binding which is only used by the test harness as there is no other\n    // way for the harness to detect if mouse coordinates need to be inverted.\n    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n    '[class.mat-slider-sliding]': '_isSliding',\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n    '[class.mat-slider-vertical]': 'vertical',\n    '[class.mat-slider-min-value]': '_isMinValue',\n    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n  templateUrl: 'slider.html',\n  styleUrls: ['slider.css'],\n  inputs: ['disabled', 'color', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatSlider extends _MatSliderMixinBase\n    implements ControlValueAccessor, OnDestroy, CanDisable, CanColor, OnInit, HasTabIndex {\n  /** Whether the slider is inverted. */\n  @Input()\n  get invert(): boolean { return this._invert; }\n  set invert(value: boolean) {\n    this._invert = coerceBooleanProperty(value);\n  }\n  private _invert = false;\n\n  /** The maximum value that the slider can have. */\n  @Input()\n  get max(): number { return this._max; }\n  set max(v: number) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _max: number = 100;\n\n  /** The minimum value that the slider can have. */\n  @Input()\n  get min(): number { return this._min; }\n  set min(v: number) {\n    this._min = coerceNumberProperty(v, this._min);\n\n    // If the value wasn't explicitly set by the user, set it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _min: number = 0;\n\n  /** The values at which the thumb will snap. */\n  @Input()\n  get step(): number { return this._step; }\n  set step(v: number) {\n    this._step = coerceNumberProperty(v, this._step);\n\n    if (this._step % 1 !== 0) {\n      this._roundToDecimal = this._step.toString().split('.').pop()!.length;\n    }\n\n    // Since this could modify the label, we need to notify the change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n  private _step: number = 1;\n\n  /** Whether or not to show the thumb label. */\n  @Input()\n  get thumbLabel(): boolean { return this._thumbLabel; }\n  set thumbLabel(value: boolean) { this._thumbLabel = coerceBooleanProperty(value); }\n  private _thumbLabel: boolean = false;\n\n  /**\n   * How often to show ticks. Relative to the step so that a tick always appears on a step.\n   * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n   */\n  @Input()\n  get tickInterval() { return this._tickInterval; }\n  set tickInterval(value: 'auto' | number) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, this._tickInterval as number);\n    } else {\n      this._tickInterval = 0;\n    }\n  }\n  private _tickInterval: 'auto' | number = 0;\n\n  /** Value of the slider. */\n  @Input()\n  get value(): number | null {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value;\n  }\n  set value(v: number | null) {\n    if (v !== this._value) {\n      let value = coerceNumberProperty(v);\n\n      // While incrementing by a decimal we can end up with values like 33.300000000000004.\n      // Truncate it to ensure that it matches the label and to make it easier to work with.\n      if (this._roundToDecimal) {\n        value = parseFloat(value.toFixed(this._roundToDecimal));\n      }\n\n      this._value = value;\n      this._percent = this._calculatePercentage(this._value);\n\n      // Since this also modifies the percentage, we need to let the change detection know.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _value: number | null = null;\n\n  /**\n   * Function that will be used to format the value before it is displayed\n   * in the thumb label. Can be used to format very large number in order\n   * for them to fit into the slider thumb.\n   */\n  @Input() displayWith: (value: number) => string | number;\n\n  /** Whether the slider is vertical. */\n  @Input()\n  get vertical(): boolean { return this._vertical; }\n  set vertical(value: boolean) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n  private _vertical = false;\n\n  /** Event emitted when the slider value has changed. */\n  @Output() readonly change: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /** Event emitted when the slider thumb moves. */\n  @Output() readonly input: EventEmitter<MatSliderChange> = new EventEmitter<MatSliderChange>();\n\n  /**\n   * Emits when the raw value of the slider changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<number | null> = new EventEmitter<number | null>();\n\n  /** The value to be used for display purposes. */\n  get displayValue(): string | number {\n    if (this.displayWith) {\n      // Value is never null but since setters and getters cannot have\n      // different types, the value getter is also typed to return null.\n      return this.displayWith(this.value!);\n    }\n\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundToDecimal);\n    }\n\n    return this.value || 0;\n  }\n\n  /** set focus to the host element */\n  focus(options?: FocusOptions) {\n    this._focusHostElement(options);\n  }\n\n  /** blur the host element */\n  blur() {\n    this._blurHostElement();\n  }\n\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  onTouched: () => any = () => {};\n\n  /** The percentage of the slider that coincides with the value. */\n  get percent(): number { return this._clamp(this._percent); }\n  private _percent: number = 0;\n\n  /**\n   * Whether or not the thumb is sliding.\n   * Used to determine if there should be a transition for the thumb and fill track.\n   */\n  _isSliding: boolean = false;\n\n  /**\n   * Whether or not the slider is active (clicked or sliding).\n   * Used to shrink and grow the thumb as according to the Material Design spec.\n   */\n  _isActive: boolean = false;\n\n  /**\n   * Whether the axis of the slider is inverted.\n   * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n   */\n  get _invertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n\n\n  /** Whether the slider is at its minimum value. */\n  get _isMinValue() {\n    return this.percent === 0;\n  }\n\n  /**\n   * The amount of space to leave between the slider thumb and the track fill & track background\n   * elements.\n   */\n  get _thumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n\n  /** CSS styles for the track background element. */\n  get _trackBackgroundStyles(): { [key: string]: string } {\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '-' : '';\n\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`\n    };\n  }\n\n  /** CSS styles for the track fill element. */\n  get _trackFillStyles(): { [key: string]: string } {\n    const percent = this.percent;\n    const axis = this.vertical ? 'Y' : 'X';\n    const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n    const sign = this._shouldInvertMouseCoords() ? '' : '-';\n\n    return {\n      // scale3d avoids some rendering issues in Chrome. See #12071.\n      transform: `translate${axis}(${sign}${this._thumbGap}px) scale3d(${scale})`,\n      // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n      // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n      // the value of the slider is 0, we can easily get into this situation. We force a\n      // recalculation by changing the element's `display` when it goes from 0 to any other value.\n      display: percent === 0 ? 'none' : ''\n    };\n  }\n\n  /** CSS styles for the ticks container element. */\n  get _ticksContainerStyles(): { [key: string]: string } {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n    let offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n\n  /** CSS styles for the ticks element. */\n  get _ticksStyles(): { [key: string]: string } {\n    let tickSize = this._tickIntervalPercent * 100;\n    let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let axis = this.vertical ? 'Y' : 'X';\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n    let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n    let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n    let styles: { [key: string]: string } = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n\n    if (this._isMinValue && this._thumbGap) {\n      let side: string;\n\n      if (this.vertical) {\n        side = this._invertAxis ? 'Bottom' : 'Top';\n      } else {\n        side = this._invertAxis ? 'Right' : 'Left';\n      }\n\n      styles[`padding${side}`] = `${this._thumbGap}px`;\n    }\n\n    return styles;\n  }\n\n  get _thumbContainerStyles(): { [key: string]: string } {\n    let axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let invertOffset =\n        (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n\n  /** The size of a tick interval as a percentage of the size of the track. */\n  private _tickIntervalPercent: number = 0;\n\n  /** The dimensions of the slider. */\n  private _sliderDimensions: ClientRect | null = null;\n\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  /** Decimal places to round to, based on the step amount. */\n  private _roundToDecimal: number;\n\n  /** Subscription to the Directionality change EventEmitter. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** The value of the slider when the slide start event fires. */\n  private _valueOnSlideStart: number | null;\n\n  /** Position of the pointer when the dragging started. */\n  private _pointerPositionOnStart: {x: number, y: number} | null;\n\n  /** Reference to the inner slider wrapper element. */\n  @ViewChild('sliderWrapper') private _sliderWrapper: ElementRef;\n\n  /**\n   * Whether mouse events should be converted to a slider position by calculating their distance\n   * from the right or bottom edge of the slider as opposed to the top or left.\n   */\n  _shouldInvertMouseCoords() {\n    return (this._getDirection() == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n  }\n\n  /** The language direction for this slider element. */\n  private _getDirection() {\n    return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n  }\n\n  /** Keeps track of the last pointer event that was captured by the slider. */\n  private _lastPointerEvent: MouseEvent | TouchEvent | null;\n\n  /** Used to subscribe to global move and end events */\n  protected _document?: Document;\n\n  constructor(elementRef: ElementRef,\n              private _focusMonitor: FocusMonitor,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Attribute('tabindex') tabIndex: string,\n              // @breaking-change 8.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string,\n              // @breaking-change 9.0.0 `_ngZone` parameter to be made required.\n              private _ngZone?: NgZone,\n              /** @breaking-change 11.0.0 make document required */\n              @Optional() @Inject(DOCUMENT) document?: any) {\n    super(elementRef);\n\n    this._document = document;\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    this._runOutsizeZone(() => {\n      const element = elementRef.nativeElement;\n      element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n      element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n    });\n  }\n\n  ngOnInit() {\n    this._focusMonitor\n        .monitor(this._elementRef, true)\n        .subscribe((origin: FocusOrigin) => {\n          this._isActive = !!origin && origin !== 'keyboard';\n          this._changeDetectorRef.detectChanges();\n        });\n    if (this._dir) {\n      this._dirChangeSubscription = this._dir.change.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    const element = this._elementRef.nativeElement;\n    element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n    element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n    this._lastPointerEvent = null;\n    this._removeGlobalEvents();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._dirChangeSubscription.unsubscribe();\n  }\n\n  _onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  _onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n\n  _onBlur() {\n    this.onTouched();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    if (this.disabled || hasModifierKey(event)) {\n      return;\n    }\n\n    const oldValue = this.value;\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n\n    this._isSliding = true;\n    event.preventDefault();\n  }\n\n  _onKeyup() {\n    this._isSliding = false;\n  }\n\n  /** Called when the user has put their pointer down on the slider. */\n  private _pointerDown = (event: TouchEvent | MouseEvent) => {\n    // Don't do anything if the slider is disabled or the\n    // user is using anything other than the main mouse button.\n    if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n      return;\n    }\n\n    this._runInsideZone(() => {\n      const oldValue = this.value;\n      const pointerPosition = getPointerPositionOnPage(event);\n      this._isSliding = true;\n      this._lastPointerEvent = event;\n      event.preventDefault();\n      this._focusHostElement();\n      this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n      this._bindGlobalEvents(event);\n      this._focusHostElement();\n      this._updateValueFromPosition(pointerPosition);\n      this._valueOnSlideStart = this.value;\n      this._pointerPositionOnStart = pointerPosition;\n\n      // Emit a change and input event if the value changed.\n      if (oldValue != this.value) {\n        this._emitInputEvent();\n        this._emitChangeEvent();\n      }\n    });\n  }\n\n  /**\n   * Called when the user has moved their pointer after\n   * starting to drag. Bound on the document level.\n   */\n  private _pointerMove = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding) {\n      // Prevent the slide from selecting anything else.\n      event.preventDefault();\n      const oldValue = this.value;\n      this._lastPointerEvent = event;\n      this._updateValueFromPosition(getPointerPositionOnPage(event));\n\n      // Native range elements always emit `input` events when the value changed while sliding.\n      if (oldValue != this.value) {\n        this._emitInputEvent();\n      }\n    }\n  }\n\n  /** Called when the user has lifted their pointer. Bound on the document level. */\n  private _pointerUp = (event: TouchEvent | MouseEvent) => {\n    if (this._isSliding) {\n      const pointerPositionOnStart = this._pointerPositionOnStart;\n      const currentPointerPosition = getPointerPositionOnPage(event);\n\n      event.preventDefault();\n      this._removeGlobalEvents();\n      this._valueOnSlideStart = this._pointerPositionOnStart = this._lastPointerEvent = null;\n      this._isSliding = false;\n\n      if (this._valueOnSlideStart != this.value && !this.disabled &&\n          pointerPositionOnStart && (pointerPositionOnStart.x !== currentPointerPosition.x ||\n          pointerPositionOnStart.y !== currentPointerPosition.y)) {\n        this._emitChangeEvent();\n      }\n    }\n  }\n\n  /** Called when the window has lost focus. */\n  private _windowBlur = () => {\n    // If the window is blurred while dragging we need to stop dragging because the\n    // browser won't dispatch the `mouseup` and `touchend` events anymore.\n    if (this._lastPointerEvent) {\n      this._pointerUp(this._lastPointerEvent);\n    }\n  }\n\n  /** Use defaultView of injected document if available or fallback to global window reference */\n  private _getWindow(): Window {\n    return this._document?.defaultView || window;\n  }\n\n  /**\n   * Binds our global move and end events. They're bound at the document level and only while\n   * dragging so that the user doesn't have to keep their pointer exactly over the slider\n   * as they're swiping across the screen.\n   */\n  private _bindGlobalEvents(triggerEvent: TouchEvent | MouseEvent) {\n    // Note that we bind the events to the `document`, because it allows us to capture\n    // drag cancel events where the user's pointer is outside the browser window.\n    const document = this._document;\n\n    if (typeof document !== 'undefined' && document) {\n      const isTouch = isTouchEvent(triggerEvent);\n      const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n      const endEventName = isTouch ? 'touchend' : 'mouseup';\n      document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n      document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n\n      if (isTouch) {\n        document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n      }\n    }\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.addEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Removes any global event listeners that we may have added. */\n  private _removeGlobalEvents() {\n    const document = this._document;\n\n    if (typeof document !== 'undefined' && document) {\n      document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n      document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n      document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n      document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n      document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n    }\n\n    const window = this._getWindow();\n\n    if (typeof window !== 'undefined' && window) {\n      window.removeEventListener('blur', this._windowBlur);\n    }\n  }\n\n  /** Increments the slider by the given number of steps (negative number decrements). */\n  private _increment(numSteps: number) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n\n  /** Calculate the new value from the new physical location. The value will always be snapped. */\n  private _updateValueFromPosition(pos: {x: number, y: number}) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n\n    let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let posComponent = this.vertical ? pos.y : pos.x;\n\n    // The exact value is calculated from the event and used to find the closest snap value.\n    let percent = this._clamp((posComponent - offset) / size);\n\n    if (this._shouldInvertMouseCoords()) {\n      percent = 1 - percent;\n    }\n\n    // Since the steps may not divide cleanly into the max value, if the user\n    // slid to 0 or 100 percent, we jump to the min/max value. This approach\n    // is slightly more intuitive than using `Math.ceil` below, because it\n    // follows the user's pointer closer.\n    if (percent === 0) {\n      this.value = this.min;\n    } else if (percent === 1) {\n      this.value = this.max;\n    } else {\n      const exactValue = this._calculateValue(percent);\n\n      // This calculation finds the closest step by finding the closest\n      // whole number divisible by the step relative to the min.\n      const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n\n      // The value needs to snap to the min and max.\n      this.value = this._clamp(closestValue, this.min, this.max);\n    }\n  }\n\n  /** Emits a change event if the current value is different from the last emitted value. */\n  private _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n    this.valueChange.emit(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n\n  /** Emits an input event when the current value is different from the last emitted value. */\n  private _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n\n  /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n  private _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n\n  /** Creates a slider change object from the specified value. */\n  private _createChangeEvent(value = this.value): MatSliderChange {\n    let event = new MatSliderChange();\n\n    event.source = this;\n    event.value = value;\n\n    return event;\n  }\n\n  /** Calculates the percentage of the slider that a value is. */\n  private _calculatePercentage(value: number | null) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n\n  /** Calculates the value a percentage of the slider corresponds to. */\n  private _calculateValue(percentage: number) {\n    return this.min + percentage * (this.max - this.min);\n  }\n\n  /** Return a number between two numbers. */\n  private _clamp(value: number, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n\n  /**\n   * Get the bounding client rect of the slider track element.\n   * The track is used rather than the native element to ignore the extra space that the thumb can\n   * take up.\n   */\n  private _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n\n  /**\n   * Focuses the native element.\n   * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n   */\n  private _focusHostElement(options?: FocusOptions) {\n    this._elementRef.nativeElement.focus(options);\n  }\n\n  /** Blurs the native element. */\n  private _blurHostElement() {\n    this._elementRef.nativeElement.blur();\n  }\n\n  /** Runs a callback inside of the NgZone, if possible. */\n  private _runInsideZone(fn: () => any) {\n    // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n    this._ngZone ? this._ngZone.run(fn) : fn();\n  }\n\n  /** Runs a callback outside of the NgZone, if possible. */\n  private _runOutsizeZone(fn: () => any) {\n    // @breaking-change 9.0.0 Remove this function once `_ngZone` is a required parameter.\n    this._ngZone ? this._ngZone.runOutsideAngular(fn) : fn();\n  }\n\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value\n   */\n  writeValue(value: any) {\n    this.value = value;\n  }\n\n  /**\n   * Registers a callback to be triggered when the value has changed.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /**\n   * Registers a callback to be triggered when the component is touched.\n   * Implemented as part of ControlValueAccessor.\n   * @param fn Callback to be registered.\n   */\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Sets whether the component should be disabled.\n   * Implemented as part of ControlValueAccessor.\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  static ngAcceptInputType_invert: BooleanInput;\n  static ngAcceptInputType_max: NumberInput;\n  static ngAcceptInputType_min: NumberInput;\n  static ngAcceptInputType_step: NumberInput;\n  static ngAcceptInputType_thumbLabel: BooleanInput;\n  static ngAcceptInputType_tickInterval: NumberInput;\n  static ngAcceptInputType_value: NumberInput;\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event: MouseEvent | TouchEvent): event is TouchEvent {\n  // This function is called for every pixel that the user has dragged so we need it to be\n  // as fast as possible. Since we only bind mouse events and touch events, we can assume\n  // that if the event's name starts with `t`, it's a touch event.\n  return event.type[0] === 't';\n}\n\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event: MouseEvent | TouchEvent) {\n  // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n  const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n  return {x: point.clientX, y: point.clientY};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatSlider} from './slider';\n\n\n@NgModule({\n  imports: [CommonModule, MatCommonModule],\n  exports: [MatSlider, MatCommonModule],\n  declarations: [MatSlider],\n})\nexport class MatSliderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}