{"version":3,"file":"datepicker.js","sources":["../../../../../../src/material/datepicker/datepicker-errors.ts","../../../../../../src/material/datepicker/datepicker-intl.ts","../../../../../../src/material/datepicker/calendar-body.ts","../../../../../../src/material/datepicker/month-view.ts","../../../../../../src/material/datepicker/multi-year-view.ts","../../../../../../src/material/datepicker/year-view.ts","../../../../../../src/material/datepicker/calendar.ts","../../../../../../src/material/datepicker/datepicker-animations.ts","../../../../../../src/material/datepicker/datepicker.ts","../../../../../../src/material/datepicker/datepicker-input.ts","../../../../../../src/material/datepicker/datepicker-toggle.ts","../../../../../../src/material/datepicker/datepicker-module.ts","../../../../../../src/material/datepicker/index.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n  return Error(\n      `MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n      `custom implementation.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel: string = 'Calendar';\n\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel: string = 'Open calendar';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel: string = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel: string = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel: string = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel: string = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel: string = 'Previous 20 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel: string = 'Next 20 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel: string = 'Choose date';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel: string = 'Choose month and year';\n\n  /** Formats a range of years. */\n  formatYearRange(start: string, end: string): string {\n    return `${start} \\u2013 ${end}`;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type MatCalendarCellCssClasses = string | string[] | Set<string> | {[key: string]: any};\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class MatCalendarCell {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean,\n              public cssClasses: MatCalendarCellCssClasses = {}) {}\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  selector: '[mat-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n    'role': 'grid',\n    'aria-readonly': 'true'\n  },\n  exportAs: 'matCalendarBody',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarBody implements OnChanges {\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: MatCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** The value in the table that is currently selected. */\n  @Input() selectedValue: number;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols: number = 7;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell: number = 0;\n\n  /**\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n   * maintained even as the table resizes.\n   */\n  @Input() cellAspectRatio: number = 1;\n\n  /** Emits when a new value is selected. */\n  @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  _firstRowOffset: number;\n\n  /** Padding for the individual date cells. */\n  _cellPadding: string;\n\n  /** Width of an individual cell. */\n  _cellWidth: string;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _ngZone: NgZone) { }\n\n  _cellClicked(cell: MatCalendarCell): void {\n    if (cell.enabled) {\n      this.selectedValueChange.emit(cell.value);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const columnChanges = changes['numCols'];\n    const {rows, numCols} = this;\n\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n        const activeCell: HTMLElement | null =\n            this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n\n        if (activeCell) {\n          activeCell.focus();\n        }\n      });\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell, MatCalendarCellCssClasses} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-month-view',\n  templateUrl: 'month-view.html',\n  exportAs: 'matMonthView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMonthView<D> implements AfterContentInit, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedDate = this._getDateInCurrentMonth(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when a new date is selected. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel: string;\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: MatCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /**\n   * The date of the month that the currently selected Date falls on.\n   * Null if the currently selected Date is in another month.\n   */\n  _selectedDate: number | null;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number | null;\n\n  /** The names of the weekdays. */\n  _weekdays: {long: string, narrow: string}[];\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(date: number) {\n    if (this._selectedDate != date) {\n      const selectedYear = this._dateAdapter.getYear(this.activeDate);\n      const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n      this.selectedChange.emit(selectedDate);\n    }\n\n    this._userSelection.emit();\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n              this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected(this._dateAdapter.getDate(this._activeDate));\n          this._userSelection.emit();\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this month view. */\n  _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n    this._monthLabel =\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._initWeekdays();\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Initializes the weekdays. */\n  private _initWeekdays() {\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n        return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n  }\n\n  /** Creates MatCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n      this._weeks[this._weeks.length - 1]\n          .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n    }\n  }\n\n  /** Date filter for the month */\n  private _shouldEnableDate(date: D): boolean {\n    return !!date &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n        (!this.dateFilter || this.dateFilter(date));\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D | null): number | null {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-multi-year-view',\n  templateUrl: 'multi-year-view.html',\n  exportAs: 'matMultiYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMultiYearView<D> implements AfterContentInit, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n    if (!isSameMultiYearView(\n      this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedYear = this._selected && this._dateAdapter.getYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new year is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years: MatCalendarCell[][];\n\n  /** The year that today falls on. */\n  _todayYear: number;\n\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n\n    // We want a range years such that we maximize the number of\n    // enabled dates visible at once. This prevents issues where the minimum year\n    // is the last item of a page OR the maximum year is the first item of a page.\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view.\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n\n    this._years = [];\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(minYearOfPage + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles when a new year is selected. */\n  _yearSelected(year: number) {\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    let daysInMonth =\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          yearsPerPage - getActiveOffset(\n            this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n      case SPACE:\n        this._yearSelected(this._dateAdapter.getYear(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  _getActiveCell(): number {\n    return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates an MatCalendarCell for the given year. */\n  private _createCellForYear(year: number) {\n    let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\n  }\n\n  /** Whether the given year is enabled. */\n  private _shouldEnableYear(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year;\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n\nexport function isSameMultiYearView<D>(\n  dateAdapter: DateAdapter<D>, date1: D, date2: D, minDate: D | null, maxDate: D | null): boolean {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) ===\n          Math.floor((year2 - startingYear) / yearsPerPage);\n}\n\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nexport function getActiveOffset<D>(\n  dateAdapter: DateAdapter<D>, activeDate: D, minDate: D | null, maxDate: D | null): number {\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)),\n    yearsPerPage);\n}\n\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear<D>(\n  dateAdapter: DateAdapter<D>, minDate: D | null, maxDate: D | null): number {\n  let startingYear = 0;\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo (a: number, b: number): number {\n  return (a % b + b) % b;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {MatCalendarBody, MatCalendarCell} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-year-view',\n  templateUrl: 'year-view.html',\n  exportAs: 'matYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatYearView<D> implements AfterContentInit, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n        this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new month is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: MatCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number | null;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(month: number) {\n    const normalizedDate =\n          this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n      case SPACE:\n        this._monthSelected(this._dateAdapter.getMonth(this._activeDate));\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this year view. */\n  _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D | null) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n\n  /** Creates an MatCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    let ariaLabel = this._dateAdapter.format(\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\n        this._dateFormats.display.monthYearA11yLabel);\n    return new MatCalendarCell(\n        month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\n  }\n\n  /** Whether the given month is enabled. */\n  private _shouldEnableMonth(month: number) {\n\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null ||\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentPortal, ComponentType, Portal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {MatCalendarCellCssClasses} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatMonthView} from './month-view';\nimport {\n  getActiveOffset,\n  isSameMultiYearView,\n  MatMultiYearView,\n  yearsPerPage\n} from './multi-year-view';\nimport {MatYearView} from './year-view';\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type MatCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for MatCalendar */\n@Component({\n  selector: 'mat-calendar-header',\n  templateUrl: 'calendar-header.html',\n  exportAs: 'matCalendarHeader',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarHeader<D> {\n  constructor(private _intl: MatDatepickerIntl,\n              @Inject(forwardRef(() => MatCalendar)) public calendar: MatCalendar<D>,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  /** The label for the current calendar view. */\n  get periodButtonText(): string {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter\n          .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n              .toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view, and the last year is\n    // just yearsPerPage - 1 away.\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n    const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n    const minYearName =\n      this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n    const maxYearName =\n      this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n    return this._intl.formatYearRange(minYearName, maxYearName);\n  }\n\n  get periodButtonLabel(): string {\n    return this.calendar.currentView == 'month' ?\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n\n  /** The label for the previous button. */\n  get prevButtonLabel(): string {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** The label for the next button. */\n  get nextButtonLabel(): string {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** Handles user clicks on the period label. */\n  currentPeriodClicked(): void {\n    this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n\n  /** Handles user clicks on the previous button. */\n  previousClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage\n            );\n  }\n\n  /** Handles user clicks on the next button. */\n  nextClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                    this.calendar.currentView == 'year' ? 1 : yearsPerPage\n            );\n  }\n\n  /** Whether the previous period button is enabled. */\n  previousEnabled(): boolean {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  nextEnabled(): boolean {\n    return !this.calendar.maxDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n          this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return isSameMultiYearView(\n      this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n  }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'class': 'mat-calendar',\n  },\n  exportAs: 'matCalendar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n  /** An input indicating the type of the header component, if set. */\n  @Input() headerComponent: ComponentType<any>;\n\n  /** A portal containing the header component type for this calendar. */\n  _calendarHeaderPortal: Portal<any>;\n\n  private _intlChanges: Subscription;\n\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  private _moveFocusOnNextTick = false;\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null { return this._startAt; }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: MatCalendarView = 'month';\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null { return this._selected; }\n  set selected(value: D | null) {\n    this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when the currently selected date changes. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Reference to the current month view component. */\n  @ViewChild(MatMonthView) monthView: MatMonthView<D>;\n\n  /** Reference to the current year view component. */\n  @ViewChild(MatYearView) yearView: MatYearView<D>;\n\n  /** Reference to the current multi-year view component. */\n  @ViewChild(MatMultiYearView) multiYearView: MatMultiYearView<D>;\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get activeDate(): D { return this._clampedActiveDate; }\n  set activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n  private _clampedActiveDate: D;\n\n  /** Whether the calendar is in month view. */\n  get currentView(): MatCalendarView { return this._currentView; }\n  set currentView(value: MatCalendarView) {\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this._changeDetectorRef.markForCheck();\n  }\n  private _currentView: MatCalendarView;\n\n  /**\n   * Emits whenever there is a state change that the header may need to respond to.\n   */\n  stateChanges = new Subject<void>();\n\n  constructor(_intl: MatDatepickerIntl,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              private _changeDetectorRef: ChangeDetectorRef) {\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => {\n      _changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change =\n        changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n    if (change && !change.firstChange) {\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell();\n  }\n\n  /** Updates today's date after an update of the active date */\n  updateTodaysDate() {\n    const currentView = this.currentView;\n    let view: MatMonthView<D> | MatYearView<D> | MatMultiYearView<D>;\n\n    if (currentView === 'month') {\n      view = this.monthView;\n    } else if (currentView === 'year') {\n      view = this.yearView;\n    } else {\n      view = this.multiYearView;\n    }\n\n    view._init();\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(date: D | null): void {\n    if (date && !this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n  }\n\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear: D) {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth: D) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  _userSelected(): void {\n    this._userSelection.emit();\n  }\n\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  /** Returns the component instance that corresponds to the current calendar view. */\n  private _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nexport const matDatepickerAnimations: {\n  readonly transformPanel: AnimationTriggerMetadata;\n  readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(1, 0.8)'\n    })),\n    transition('void => enter',  animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n      opacity: 1,\n      transform: 'scale(1, 1)'\n    }))),\n    transition('* => void', animate('100ms linear', style({opacity: 0})))\n  ]),\n\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [\n    state('void', style({opacity: 0})),\n    state('enter', style({opacity: 1})),\n\n    // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n    // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n    transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  DateAdapter,\n  mixinColor,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {merge, Subject, Subscription} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {MatCalendar} from './calendar';\nimport {matDatepickerAnimations} from './datepicker-animations';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatCalendarCellCssClasses} from './calendar-body';\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n  constructor(public _elementRef: ElementRef) { }\n}\nconst _MatDatepickerContentMixinBase: CanColorCtor & typeof MatDatepickerContentBase =\n    mixinColor(MatDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  selector: 'mat-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[@transformPanel]': '_animationState',\n    '(@transformPanel.done)': '_animationDone.next()',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n  },\n  animations: [\n    matDatepickerAnimations.transformPanel,\n    matDatepickerAnimations.fadeInCalendar,\n  ],\n  exportAs: 'matDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color'],\n})\nexport class MatDatepickerContent<D> extends _MatDatepickerContentMixinBase\n  implements AfterViewInit, OnDestroy, CanColor {\n\n  /** Reference to the internal calendar component. */\n  @ViewChild(MatCalendar) _calendar: MatCalendar<D>;\n\n  /** Reference to the datepicker that created the overlay. */\n  datepicker: MatDatepicker<D>;\n\n  /** Whether the datepicker is above or below the input. */\n  _isAbove: boolean;\n\n  /** Current state of the animation. */\n  _animationState: 'enter' | 'void' = 'enter';\n\n  /** Emits when an animation has finished. */\n  _animationDone = new Subject<void>();\n\n  constructor(\n    elementRef: ElementRef,\n    /**\n     * @deprecated `_changeDetectorRef` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    private _changeDetectorRef?: ChangeDetectorRef) {\n    super(elementRef);\n  }\n\n  ngAfterViewInit() {\n    this._calendar.focusActiveCell();\n  }\n\n  ngOnDestroy() {\n    this._animationDone.complete();\n  }\n\n  _startExitAnimation() {\n    this._animationState = 'void';\n\n    // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.\n    if (this._changeDetectorRef) {\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n}\n\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  selector: 'mat-datepicker',\n  template: '',\n  exportAs: 'matDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatDatepicker<D> implements OnDestroy, CanColor {\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** An input indicating the type of the custom header component for the calendar, if set. */\n  @Input() calendarHeaderComponent: ComponentType<any>;\n\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n  /** Color palette to use on the datepicker's calendar. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color ||\n        (this._datepickerInput ? this._datepickerInput._getThemePalette() : undefined);\n  }\n  set color(value: ThemePalette) {\n    this._color = value;\n  }\n  _color: ThemePalette;\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean { return this._touchUi; }\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n        this._datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n  private _disabled: boolean;\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: (date: D) => MatCalendarCellCssClasses;\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) { value ? this.open() : this.close(); }\n  private _opened = false;\n\n  /** The id for the datepicker calendar. */\n  id: string = `mat-datepicker-${datepickerUid++}`;\n\n  /** The currently selected date. */\n  get _selected(): D | null { return this._validSelected; }\n  set _selected(value: D | null) { this._validSelected = value; }\n  private _validSelected: D | null = null;\n\n  /** The minimum selectable date. */\n  get _minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get _maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  get _dateFilter(): (date: D | null) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  private _popupRef: OverlayRef | null;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<MatDatepickerContent<D>> | null;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<MatDatepickerContent<D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** Subscription to value changes in the associated input element. */\n  private _inputSubscription = Subscription.EMPTY;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: MatDatepickerInput<D>;\n\n  /** Emits when the datepicker is disabled. */\n  readonly _disabledChange = new Subject<boolean>();\n\n  /** Emits new selected date when selected date changes. */\n  readonly _selectedChanged = new Subject<D>();\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnDestroy() {\n    this._destroyPopup();\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n  }\n\n  /** Selects the given date */\n  select(date: D): void {\n    let oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this._selectedChanged.next(date);\n    }\n  }\n\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   */\n  _registerInput(input: MatDatepickerInput<D>): void {\n    if (this._datepickerInput) {\n      throw Error('A MatDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n        this._datepickerInput._valueChange.subscribe((value: D | null) => this._selected = value);\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupComponentRef && this._popupRef) {\n      const instance = this._popupComponentRef.instance;\n      instance._startExitAnimation();\n      instance._animationDone.pipe(take(1)).subscribe(() => this._destroyPopup());\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    // Usually this would be handled by `open` which ensures that we can only have one overlay\n    // open at a time, however since we reset the variables in async handlers some overlays\n    // may slip through if the user opens and closes multiple times in quick succession (e.g.\n    // by holding down the enter key).\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n\n    this._dialogRef = this._dialog.open<MatDatepickerContent<D>>(MatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog',\n\n      // These values are all the same as the defaults, but we set them explicitly so that the\n      // datepicker dialog behaves consistently even if the user changed the defaults.\n      hasBackdrop: true,\n      disableClose: false,\n      width: '',\n      height: '',\n      minWidth: '',\n      minHeight: '',\n      maxWidth: '80vw',\n      maxHeight: '',\n      position: {},\n      autoFocus: true,\n\n      // `MatDialog` has focus restoration built in, however we want to disable it since the\n      // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n      // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n      // restores focus when the animation is finished, but the datepicker does it immediately.\n      // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n      // inside the `closed` event which is dispatched immediately.\n      restoreFocus: false\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._dialogRef.componentInstance.datepicker = this;\n    this._dialogRef.componentInstance.color = this.color;\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    const portal = new ComponentPortal<MatDatepickerContent<D>>(MatDatepickerContent,\n                                                                this._viewContainerRef);\n\n    this._destroyPopup();\n    this._createPopup();\n    const ref = this._popupComponentRef = this._popupRef!.attach(portal);\n    ref.instance.datepicker = this;\n    ref.instance.color = this.color;\n\n    // Update the position once the calendar has rendered.\n    this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n      this._popupRef!.updatePosition();\n    });\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: 'mat-overlay-transparent-backdrop',\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE ||\n               (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(event => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.close();\n    });\n  }\n\n  /** Destroys the current popup overlay. */\n  private _destroyPopup() {\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupRef = this._popupComponentRef = null;\n    }\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-datepicker-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition()\n      .withPositions([\n        {\n          originX: 'start',\n          originY: 'bottom',\n          overlayX: 'start',\n          overlayY: 'top'\n        },\n        {\n          originX: 'start',\n          originY: 'top',\n          overlayX: 'start',\n          overlayY: 'bottom'\n        },\n        {\n          originX: 'end',\n          originY: 'bottom',\n          overlayX: 'end',\n          overlayY: 'top'\n        },\n        {\n          originX: 'end',\n          originY: 'top',\n          overlayX: 'end',\n          overlayY: 'bottom'\n        }\n      ]);\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_touchUi: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  AfterViewInit,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats, ThemePalette} from '@angular/material/core';\nimport {MAT_FORM_FIELD, MatFormField} from '@angular/material/form-field';\nimport {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\nimport {Subscription} from 'rxjs';\nimport {MatDatepicker} from './datepicker';\nimport {createMissingDateImplError} from './datepicker-errors';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nexport class MatDatepickerInputEvent<D> {\n  /** The new value for the target datepicker input. */\n  value: D | null;\n\n  constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    public target: MatDatepickerInput<D>,\n    /** Reference to the native input element associated with the datepicker input. */\n    public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n\n/** Directive used to connect an input to a MatDatepicker. */\n@Directive({\n  selector: 'input[matDatepicker]',\n  providers: [\n    MAT_DATEPICKER_VALUE_ACCESSOR,\n    MAT_DATEPICKER_VALIDATORS,\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput},\n  ],\n  host: {\n    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'matDatepickerInput',\n})\nexport class MatDatepickerInput<D> implements ControlValueAccessor, OnDestroy, AfterViewInit,\n  Validator {\n\n  /** Whether the component has been initialized. */\n  private _isInitialized: boolean;\n\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set matDatepicker(value: MatDatepicker<D>) {\n    if (!value) {\n      return;\n    }\n\n    this._datepicker = value;\n    this._datepicker._registerInput(this);\n    this._datepickerSubscription.unsubscribe();\n\n    this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((selected: D) => {\n      this.value = selected;\n      this._cvaOnChange(selected);\n      this._onTouched();\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    });\n  }\n  _datepicker: MatDatepicker<D>;\n\n  /** Function that can be used to filter out dates within the datepicker. */\n  @Input()\n  set matDatepickerFilter(value: (date: D | null) => boolean) {\n    this._dateFilter = value;\n    this._validatorOnChange();\n  }\n  _dateFilter: (date: D | null) => boolean;\n\n  /** The value of the input. */\n  @Input()\n  get value(): D | null { return this._value; }\n  set value(value: D | null) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\n    value = this._getValidDateOrNull(value);\n    const oldDate = this.value;\n    this._value = value;\n    this._formatValue(value);\n\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\n      this._valueChange.emit(value);\n    }\n  }\n  private _value: D | null;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n  private _max: D | null;\n\n  /** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled(): boolean { return !!this._disabled; }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    const element = this._elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._disabledChange.emit(newValue);\n    }\n\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n    // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n    // element has been inserted.\n    if (newValue && this._isInitialized && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() readonly dateChange: EventEmitter<MatDatepickerInputEvent<D>> =\n      new EventEmitter<MatDatepickerInputEvent<D>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() readonly dateInput: EventEmitter<MatDatepickerInputEvent<D>> =\n      new EventEmitter<MatDatepickerInputEvent<D>>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<D | null>();\n\n  /** Emits when the disabled state has changed */\n  _disabledChange = new EventEmitter<boolean>();\n\n  _onTouched = () => {};\n\n  private _cvaOnChange: (value: any) => void = () => {};\n\n  private _validatorOnChange = () => {};\n\n  private _datepickerSubscription = Subscription.EMPTY;\n\n  private _localeSubscription = Subscription.EMPTY;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'matDatepickerParse': {'text': this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.min || !controlValue ||\n        this._dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n        null : {'matDatepickerMin': {'min': this.min, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.max || !controlValue ||\n        this._dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n        null : {'matDatepickerMax': {'max': this.max, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\n        null : {'matDatepickerFilter': true};\n  }\n\n  /** The combined form control validator for this input. */\n  private _validator: ValidatorFn | null =\n      Validators.compose(\n          [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n\n  /** Whether the last value set on the input was valid. */\n  private _lastValueValid = false;\n\n  constructor(\n      private _elementRef: ElementRef<HTMLInputElement>,\n      @Optional() public _dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n      @Optional() @Inject(MAT_FORM_FIELD) private _formField: MatFormField) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MAT_DATE_FORMATS');\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  ngAfterViewInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnDestroy() {\n    this._datepickerSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  /** @docs-private */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n   */\n  getPopupConnectionElementRef(): ElementRef {\n    return this.getConnectedOverlayOrigin();\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    const lastValueWasValid = this._lastValueValid;\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\n    date = this._getValidDateOrNull(date);\n\n    if (!this._dateAdapter.sameDate(date, this._value)) {\n      this._value = date;\n      this._cvaOnChange(date);\n      this._valueChange.emit(date);\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    } else if (lastValueWasValid !== this._lastValueValid) {\n      this._validatorOnChange();\n    }\n  }\n\n  _onChange() {\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /** Returns the palette used by the input's form field, if any. */\n  _getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n  /** Formats a value and sets it on the input element. */\n  private _formatValue(value: D | null) {\n    this._elementRef.nativeElement.value =\n        value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n  }\n\n  /**\n   * @param obj The object to check.\n   * @returns The given object if it is both a date instance and valid, otherwise null.\n   */\n  private _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\n\n  // Accept `any` to avoid conflicts with other directives on `<input>` that\n  // may accept different types.\n  static ngAcceptInputType_value: any;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {MatButton} from '@angular/material/button';\nimport {merge, of as observableOf, Subscription} from 'rxjs';\nimport {MatDatepicker} from './datepicker';\nimport {MatDatepickerIntl} from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n@Directive({\n  selector: '[matDatepickerToggleIcon]'\n})\nexport class MatDatepickerToggleIcon {}\n\n\n@Component({\n  selector: 'mat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  styleUrls: ['datepicker-toggle.css'],\n  host: {\n    'class': 'mat-datepicker-toggle',\n    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n    // consumer may have provided, while still being able to receive focus.\n    '[attr.tabindex]': 'disabled ? null : -1',\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n    '(focus)': '_button.focus()',\n  },\n  exportAs: 'matDatepickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for') datepicker: MatDatepicker<D>;\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n\n    return !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Whether ripples on the toggle should be disabled. */\n  @Input() disableRipple: boolean;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(MatDatepickerToggleIcon) _customIcon: MatDatepickerToggleIcon;\n\n  /** Underlying button element. */\n  @ViewChild('button') _button: MatButton;\n\n  constructor(\n    public _intl: MatDatepickerIntl,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Attribute('tabindex') defaultTabIndex: string) {\n\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n        this.datepicker._datepickerInput._disabledChange : observableOf();\n    const datepickerToggled = this.datepicker ?\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n        observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      datepickerDisabled,\n      inputDisabled,\n      datepickerToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {MatCalendar, MatCalendarHeader} from './calendar';\nimport {MatCalendarBody} from './calendar-body';\nimport {\n  MatDatepicker,\n  MatDatepickerContent,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './datepicker';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatDatepickerToggle, MatDatepickerToggleIcon} from './datepicker-toggle';\nimport {MatMonthView} from './month-view';\nimport {MatMultiYearView} from './multi-year-view';\nimport {MatYearView} from './year-view';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n  ],\n  exports: [\n    CdkScrollableModule,\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n  ],\n  declarations: [\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n  ],\n  providers: [\n    MatDatepickerIntl,\n    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  ],\n  entryComponents: [\n    MatDatepickerContent,\n    MatCalendarHeader,\n  ]\n})\nexport class MatDatepickerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}